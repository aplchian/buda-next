{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/CardDropZone.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nfunction CardDropZone(_ref) {\n  _s();\n\n  var i = _ref.i,\n      handleDrop = _ref.handleDrop;\n\n  var _useDrop = useDrop({\n    accept: 'CARD',\n    // @ts-ignore\n    drop: function drop(_ref2) {\n      var imageId = _ref2.imageId;\n      handleDrop(imageId, i);\n    },\n    collect: function collect(monitor) {\n      return {\n        isOver: !!monitor.isOver()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      isOver = _useDrop2[0].isOver,\n      drop = _useDrop2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: isOver ? '30px' : '16px',\n      padding: isOver ? '2em 0' : 0,\n      backgroundColor: 'white'\n    },\n    className: \"my-4\",\n    children: isOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 1,\n        backgroundColor: 'black'\n      },\n      className: \"flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        style: {\n          color: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardDropZone, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n\n_c = CardDropZone;\nexport default CardDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDropZone\");","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/CardDropZone.tsx"],"names":["React","useDrop","AddCircleIcon","CardDropZone","i","handleDrop","accept","drop","imageId","collect","monitor","isOver","position","width","height","padding","backgroundColor","top","left","zIndex","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,SAASC,YAAT,OAMG;AAAA;;AAAA,MALCC,CAKD,QALCA,CAKD;AAAA,MAJCC,UAID,QAJCA,UAID;;AAAA,iBAC4BJ,OAAO,CAAC;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/B;AACAC,IAAAA,IAAI,EAAE,qBAAiB;AAAA,UAAdC,OAAc,SAAdA,OAAc;AACnBH,MAAAA,UAAU,CAACG,OAAD,EAAUJ,CAAV,CAAV;AACH,KAL8B;AAM/BK,IAAAA,OAAO,EAAE,iBAAAC,OAAO;AAAA,aAAK;AACjBC,QAAAA,MAAM,EAAE,CAAC,CAACD,OAAO,CAACC,MAAR;AADO,OAAL;AAAA;AANe,GAAD,CADnC;AAAA;AAAA,MACUA,MADV,gBACUA,MADV;AAAA,MACoBJ,IADpB;;AAWC,sBACI;AACI,IAAA,GAAG,EAAEA,IADT;AAEI,IAAA,KAAK,EAAE;AACHK,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,KAAK,EAAE,MAFJ;AAGHC,MAAAA,MAAM,EAAEH,MAAM,GAAG,MAAH,GAAY,MAHvB;AAIHI,MAAAA,OAAO,EAAEJ,MAAM,GAAG,OAAH,GAAa,CAJzB;AAKHK,MAAAA,eAAe,EAAE;AALd,KAFX;AASI,IAAA,SAAS,EAAC,MATd;AAAA,cAWKL,MAAM,iBACH;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,UADP;AAEHK,QAAAA,GAAG,EAAE,CAFF;AAGHC,QAAAA,IAAI,EAAE,CAHH;AAIHJ,QAAAA,MAAM,EAAE,MAJL;AAKHD,QAAAA,KAAK,EAAE,MALJ;AAMHM,QAAAA,MAAM,EAAE,CANL;AAOHH,QAAAA,eAAe,EAAE;AAPd,OADX;AAUI,MAAA,SAAS,EAAC,kCAVd;AAAA,6BAYI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT;AAAtB;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA/CQjB,Y;UAOsBF,O;;;KAPtBE,Y;AAiDT,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { useDrop } from 'react-dnd'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\n\nfunction CardDropZone({\n    i,\n    handleDrop,\n}: {\n    i: number\n    handleDrop: (arg1: string, arg2: number) => void\n}) {\n    const [{ isOver }, drop] = useDrop({\n        accept: 'CARD',\n        // @ts-ignore\n        drop: ({ imageId }) => {\n            handleDrop(imageId, i)\n        },\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n        }),\n    })\n    return (\n        <div\n            ref={drop}\n            style={{\n                position: 'relative',\n                width: '100%',\n                height: isOver ? '30px' : '16px',\n                padding: isOver ? '2em 0' : 0,\n                backgroundColor: 'white',\n            }}\n            className=\"my-4\"\n        >\n            {isOver && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        height: '100%',\n                        width: '100%',\n                        zIndex: 1,\n                        backgroundColor: 'black',\n                    }}\n                    className=\"flex justify-center items-center\"\n                >\n                    <AddCircleIcon style={{ color: 'white' }} />\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CardDropZone\n"]},"metadata":{},"sourceType":"module"}