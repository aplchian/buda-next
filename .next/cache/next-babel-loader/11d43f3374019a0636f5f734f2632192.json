{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/Dialog.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport LanguageOptions from './LanguageOptions';\nimport { append, lensPath, path, pathOr, propEq, propOr, reject, view } from 'ramda';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport uuidv4 from 'uuid/v4';\nimport { useTranslation } from 'react-i18next';\nimport { getPaginationTypes } from '../utils/pagination-prediction';\nimport { Formik } from 'formik';\n\nconst styles = theme => createStyles({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, _objectSpread(_objectSpread({\n    disableTypography: true,\n    className: classes.root\n  }, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n});\n\nfunction SectionInput(props) {\n  const value = pathOr('', ['data', 'name', '@value'], props);\n  const language = pathOr(props.defaultLanguage, ['data', 'name', '@language'], props);\n  const id = pathOr(null, ['data', 'id'], props);\n  const [sectionValue, setSectionValue] = React.useState(value);\n  const [languageValue, setLanguageValue] = React.useState(language);\n  const {\n    defaultLanguage\n  } = props;\n  const nameLanguage = path(['data', 'name', '@language'], props);\n  React.useEffect(() => {\n    if (!nameLanguage) {\n      setLanguageValue(defaultLanguage);\n    }\n  }, [defaultLanguage, nameLanguage]);\n  const {\n    handleAddSection,\n    handleRemoveSection,\n    sectionInUseCount,\n    key\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const inputValid = sectionValue.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: t('Section'),\n        type: \"text\",\n        disabled: !props.new,\n        value: sectionValue,\n        style: {\n          width: '100%'\n        },\n        onChange: e => {\n          setSectionValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        shrink: true,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        disabled: !props.new,\n        value: languageValue,\n        onChange: e => {\n          setLanguageValue(e.target.value);\n        },\n        children: /*#__PURE__*/_jsxDEV(LanguageOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 flex items-center\",\n      children: props.new ? /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        style: {\n          color: inputValid ? 'black' : 'gray',\n          cursor: inputValid ? 'pointer' : 'initial'\n        },\n        onClick: () => {\n          if (inputValid) {\n            setSectionValue('');\n            setLanguageValue(props.defaultLanguage);\n            handleAddSection(sectionValue, languageValue);\n          } else {\n            alert(t('Section name must not be empty!'));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(RemoveCircleIcon, {\n        className: \"cursor-pointer\",\n        onClick: () => {\n          const count = sectionInUseCount(id);\n\n          if (count > 0) {\n            alert(`${t('alert before count')} ${count} ${t('alert after count')}`);\n          } else {\n            handleRemoveSection(id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function SettingsDialog(props) {\n  const {\n    handleSettingsUpdate,\n    sectionInUseCount,\n    appData,\n    manifest\n  } = props;\n\n  const handleAddSection = (value, language) => {\n    const sectionsLens = lensPath(['sections']);\n    const currentSections = view(sectionsLens, manifest);\n    const updatedSections = append( // @ts-ignore\n    {\n      id: uuidv4(),\n      name: {\n        '@value': value,\n        '@language': language\n      }\n    }, currentSections);\n    handleSettingsUpdate(sectionsLens, updatedSections);\n  };\n\n  const handleRemoveSection = id => {\n    const sectionsLens = lensPath(['sections']);\n    const currentSections = view(sectionsLens, manifest); // @ts-ignore\n\n    const updatedSections = reject(propEq('id', id), currentSections);\n    handleSettingsUpdate(sectionsLens, updatedSections);\n  };\n\n  const {\n    t\n  } = useTranslation(); // @ts-ignore\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: props.open,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      onClose: props.handleClose,\n      children: t('Edit')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2/4\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              children: t('Status')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: manifest['status'],\n              onChange: e => {\n                handleSettingsUpdate(lensPath(['status']), e.target.value);\n              },\n              native: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"editing\",\n                children: t('editing')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"released\",\n                children: t('released')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"withdrawn\",\n                children: t('withdrawn')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2/4\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                shrink: true,\n                children: t('Volume Language')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: appData.bvmt['default-vol-string-lang'],\n                onChange: e => {\n                  handleSettingsUpdate(lensPath(['appData', 'bvmt', 'default-vol-string-lang']), e.target.value);\n                },\n                native: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bo\",\n                  children: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"en\",\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2/4\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              children: t('Pagination Type')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: path(['pagination', 0, 'type'], manifest),\n              onChange: e => {\n                handleSettingsUpdate(lensPath(['pagination', 0, 'type']), e.target.value);\n              },\n              native: true,\n              children: getPaginationTypes().map((type, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"type\",\n                children: t(type)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2/4\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              children: t('Viewing Direction')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: manifest['viewing-direction'],\n              onChange: e => {\n                handleSettingsUpdate(lensPath(['viewing-direction']), e.target.value);\n              },\n              native: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"top-to-bottom\",\n                children: t('top to bottom')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"left-to-right\",\n                children: t('left to right')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"right-to-left\",\n                children: t('right to left')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bottom-to-top\",\n                children: t('bottom to top')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"continuous\",\n                children: t('continuous')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), propOr([], 'sections', manifest).map((section, i) => {\n        return /*#__PURE__*/_jsxDEV(SectionInput, {\n          i: i,\n          data: section,\n          handleAddSection: handleAddSection,\n          handleRemoveSection: handleRemoveSection,\n          sectionInUseCount: sectionInUseCount,\n          defaultLanguage: manifest.appData.bvmt['default-vol-string-lang']\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(SectionInput, {\n        new: true,\n        handleAddSection: handleAddSection,\n        handleRemoveSection: handleRemoveSection,\n        sectionInUseCount: sectionInUseCount,\n        defaultLanguage: manifest.appData.bvmt['default-vol-string-lang']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: t('Indication (odd)'),\n          type: \"text\",\n          defaultValue: appData.bvmt['margin-indication-odd'],\n          onBlur: e => {\n            handleSettingsUpdate(lensPath(['appData', 'bvmt', 'margin-indication-odd']), e.target.value);\n          },\n          style: {\n            width: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: t('Indication (even)'),\n          type: \"text\",\n          defaultValue: appData.bvmt['margin-indication-even'],\n          style: {\n            width: '50%'\n          },\n          onBlur: e => {\n            handleSettingsUpdate(lensPath(['appData', 'bvmt', 'margin-indication-even']), e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: t('Notes')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            note: pathOr('', ['note', 0, '@value'], manifest),\n            language: pathOr(manifest.appData['bvmt']['default-ui-string-lang'], ['note', 0, '@language'], manifest)\n          },\n          onSubmit: ({\n            note,\n            language\n          }) => {\n            handleSettingsUpdate(lensPath(['note', 0]), {\n              '@value': note,\n              '@language': language\n            });\n          },\n          enableReinitialize: true,\n          children: ({\n            values,\n            handleChange,\n            handleSubmit\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/2\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: values.note,\n                onChange: handleChange,\n                style: {\n                  width: '100%'\n                },\n                inputProps: {\n                  id: 'note'\n                },\n                multiline: true,\n                rows: \"4\" // @ts-ignore\n                ,\n                onBlur: handleSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: \"self-end\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                native: true,\n                value: values.language,\n                onChange: handleChange // @ts-ignore\n                ,\n                onBlur: handleSubmit,\n                inputProps: {\n                  id: 'language'\n                },\n                children: /*#__PURE__*/_jsxDEV(LanguageOptions, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: props.handleClose,\n          color: \"primary\",\n          children: t('OK')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/Dialog.tsx"],"names":["React","createStyles","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogActions","IconButton","CloseIcon","Typography","Select","TextField","LanguageOptions","append","lensPath","path","pathOr","propEq","propOr","reject","view","InputLabel","FormControl","AddCircleIcon","RemoveCircleIcon","uuidv4","useTranslation","getPaginationTypes","Formik","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","SectionInput","value","language","defaultLanguage","id","sectionValue","setSectionValue","useState","languageValue","setLanguageValue","nameLanguage","useEffect","handleAddSection","handleRemoveSection","sectionInUseCount","key","t","inputValid","length","new","width","e","target","cursor","alert","count","DialogActions","SettingsDialog","handleSettingsUpdate","appData","manifest","sectionsLens","currentSections","updatedSections","name","handleClose","open","bvmt","map","type","i","section","note","values","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogActions from '@material-ui/core/DialogActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport LanguageOptions from './LanguageOptions'\nimport { append, lensPath, path, pathOr, propEq, propOr, reject, view } from 'ramda'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport uuidv4 from 'uuid/v4'\nimport { useTranslation } from 'react-i18next'\nimport { getPaginationTypes } from '../utils/pagination-prediction'\nimport { Formik } from 'formik'\nimport { Buda } from '../../buda/types'\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n    })\n\nconst DialogTitle = withStyles(styles)(\n    (props: {\n        children: React.ReactElement\n        classes: any\n        onClose: () => void\n    }) => {\n        const { children, classes, onClose, ...other } = props\n        return (\n            <MuiDialogTitle\n                disableTypography\n                className={classes.root}\n                {...other}\n            >\n                <Typography variant=\"h6\">{children}</Typography>\n                {onClose ? (\n                    <IconButton\n                        aria-label=\"close\"\n                        className={classes.closeButton}\n                        onClick={onClose}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ) : null}\n            </MuiDialogTitle>\n        )\n    }\n)\n\nfunction SectionInput(props: {\n    defaultLanguage?: any\n    handleAddSection?: any\n    handleRemoveSection?: any\n    sectionInUseCount?: any\n    key?: number\n    new?: any\n    data?: any\n    i?: number\n}) {\n    const value = pathOr('', ['data', 'name', '@value'], props)\n    const language = pathOr(\n        props.defaultLanguage,\n        ['data', 'name', '@language'],\n        props\n    )\n    const id = pathOr(null, ['data', 'id'], props)\n    const [sectionValue, setSectionValue] = React.useState(value)\n    const [languageValue, setLanguageValue] = React.useState(language)\n    const { defaultLanguage } = props\n    const nameLanguage = path(['data', 'name', '@language'], props)\n\n    React.useEffect(() => {\n        if (!nameLanguage) {\n            setLanguageValue(defaultLanguage)\n        }\n    }, [defaultLanguage, nameLanguage])\n\n    const {\n        handleAddSection,\n        handleRemoveSection,\n        sectionInUseCount,\n        key,\n    } = props\n    const { t } = useTranslation()\n    const inputValid = sectionValue.length > 0\n    return (\n        <div className=\"w-full flex mb-6\" key={key}>\n            <div className=\"w-1/2\">\n                <TextField\n                    label={t('Section')}\n                    type=\"text\"\n                    disabled={!props.new}\n                    value={sectionValue}\n                    style={{ width: '100%' }}\n                    onChange={e => {\n                        setSectionValue(e.target.value)\n                    }}\n                />\n            </div>\n\n            <FormControl>\n                <InputLabel shrink> </InputLabel>\n                <Select\n                    native\n                    disabled={!props.new}\n                    value={languageValue}\n                    onChange={e => {\n                        setLanguageValue(e.target.value)\n                    }}\n                >\n                    <LanguageOptions />\n                </Select>\n            </FormControl>\n\n            <div className=\"w-1/4 flex items-center\">\n                {props.new ? (\n                    <AddCircleIcon\n                        style={{\n                            color: inputValid ? 'black' : 'gray',\n                            cursor: inputValid ? 'pointer' : 'initial',\n                        }}\n                        onClick={() => {\n                            if (inputValid) {\n                                setSectionValue('')\n                                setLanguageValue(props.defaultLanguage)\n                                handleAddSection(sectionValue, languageValue)\n                            } else {\n                                alert(t('Section name must not be empty!'))\n                            }\n                        }}\n                    />\n                ) : (\n                    <RemoveCircleIcon\n                        className=\"cursor-pointer\"\n                        onClick={() => {\n                            const count = sectionInUseCount(id)\n                            if (count > 0) {\n                                alert(\n                                    `${t('alert before count')} ${count} ${t(\n                                        'alert after count'\n                                    )}`\n                                )\n                            } else {\n                                handleRemoveSection(id)\n                            }\n                        }}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst DialogActions = withStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions)\n\nexport default function SettingsDialog(props: {\n    open: boolean\n    handleClose: any\n    handleSettingsUpdate: any\n    sectionInUseCount: any\n    appData: any\n    manifest: any\n}) {\n    const { handleSettingsUpdate, sectionInUseCount, appData, manifest } = props\n\n    const handleAddSection = (value: string, language: string) => {\n        const sectionsLens = lensPath(['sections'])\n        const currentSections = view(\n            sectionsLens,\n            manifest\n        ) as Buda.Manifest['sections'][]\n        const updatedSections = append(\n            // @ts-ignore\n            { id: uuidv4(), name: { '@value': value, '@language': language } },\n            currentSections\n        )\n        handleSettingsUpdate(sectionsLens, updatedSections)\n    }\n\n    const handleRemoveSection = (id: string) => {\n        const sectionsLens = lensPath(['sections'])\n        const currentSections = view(\n            sectionsLens,\n            manifest\n        ) as Buda.Manifest['sections'][]\n        // @ts-ignore\n        const updatedSections = reject(propEq('id', id), currentSections)\n        handleSettingsUpdate(sectionsLens, updatedSections)\n    }\n\n    const { t } = useTranslation()\n\n    // @ts-ignore\n    return (\n        <Dialog\n            onClose={props.handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={props.open}\n            fullWidth\n        >\n            <DialogTitle onClose={props.handleClose}>{t('Edit')}</DialogTitle>\n            <div className=\"p-3\">\n                <div className=\"w-full\">\n                    <div className=\"w-2/4\">\n                        <FormControl style={{ width: '100%' }}>\n                            <InputLabel shrink>{t('Status')}</InputLabel>\n                            <Select\n                                value={manifest['status']}\n                                onChange={e => {\n                                    handleSettingsUpdate(\n                                        lensPath(['status']),\n                                        e.target.value\n                                    )\n                                }}\n                                native\n                            >\n                                <option value=\"editing\">{t('editing')}</option>\n                                <option value=\"released\">\n                                    {t('released')}\n                                </option>\n                                <option value=\"withdrawn\">\n                                    {t('withdrawn')}\n                                </option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"w-full\">\n                        <div className=\"w-2/4\">\n                            <FormControl style={{ width: '100%' }}>\n                                <InputLabel shrink>\n                                    {t('Volume Language')}\n                                </InputLabel>\n                                <Select\n                                    value={\n                                        appData.bvmt['default-vol-string-lang']\n                                    }\n                                    onChange={e => {\n                                        handleSettingsUpdate(\n                                            lensPath([\n                                                'appData',\n                                                'bvmt',\n                                                'default-vol-string-lang',\n                                            ]),\n                                            e.target.value\n                                        )\n                                    }}\n                                    native\n                                >\n                                    <option value=\"bo\">བོད་</option>\n                                    <option value=\"en\">English</option>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                {/*<h2 className=\"mb-3 font-bold\">{t('Input 1')}</h2>*/}\n                <div className=\"w-full\">\n                    <div className=\"w-2/4\">\n                        <FormControl style={{ width: '100%' }}>\n                            <InputLabel shrink>\n                                {t('Pagination Type')}\n                            </InputLabel>\n                            <Select\n                                value={path(\n                                    ['pagination', 0, 'type'],\n                                    manifest\n                                )}\n                                onChange={e => {\n                                    handleSettingsUpdate(\n                                        lensPath(['pagination', 0, 'type']),\n                                        e.target.value\n                                    )\n                                }}\n                                native\n                            >\n                                {getPaginationTypes().map((type, i) => (\n                                    <option key={i} value=\"type\">{t(type)}</option>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <div className=\"w-full my-4\">\n                    <div className=\"w-2/4\">\n                        <FormControl style={{ width: '100%' }}>\n                            <InputLabel shrink>\n                                {t('Viewing Direction')}\n                            </InputLabel>\n                            <Select\n                                value={manifest['viewing-direction']}\n                                onChange={e => {\n                                    handleSettingsUpdate(\n                                        lensPath(['viewing-direction']),\n                                        e.target.value\n                                    )\n                                }}\n                                native\n                            >\n                                <option value=\"\"></option>\n                                <option value=\"top-to-bottom\">\n                                    {t('top to bottom')}\n                                </option>\n                                <option value=\"left-to-right\">\n                                    {t('left to right')}\n                                </option>\n                                <option value=\"right-to-left\">\n                                    {t('right to left')}\n                                </option>\n                                <option value=\"bottom-to-top\">\n                                    {t('bottom to top')}\n                                </option>\n                                <option value=\"continuous\">\n                                    {t('continuous')}\n                                </option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                {/*\n                    // @ts-ignore */}\n                {propOr([], 'sections', manifest).map((section, i) => {\n                    return (\n                        <SectionInput\n                            i={i}\n                            key={i}\n                            data={section}\n                            handleAddSection={handleAddSection}\n                            handleRemoveSection={handleRemoveSection}\n                            sectionInUseCount={sectionInUseCount}\n                            defaultLanguage={\n                                manifest.appData.bvmt['default-vol-string-lang']\n                            }\n                        />\n                    )\n                })}\n                <SectionInput\n                    new\n                    handleAddSection={handleAddSection}\n                    handleRemoveSection={handleRemoveSection}\n                    sectionInUseCount={sectionInUseCount}\n                    defaultLanguage={\n                        manifest.appData.bvmt['default-vol-string-lang']\n                    }\n                />\n                <div className=\"w-full\">\n                    <TextField\n                        label={t('Indication (odd)')}\n                        type=\"text\"\n                        defaultValue={appData.bvmt['margin-indication-odd']}\n                        onBlur={e => {\n                            handleSettingsUpdate(\n                                lensPath([\n                                    'appData',\n                                    'bvmt',\n                                    'margin-indication-odd',\n                                ]),\n                                e.target.value\n                            )\n                        }}\n                        style={{ width: '50%' }}\n                    />\n                </div>\n                <div className=\"w-full\">\n                    <TextField\n                        label={t('Indication (even)')}\n                        type=\"text\"\n                        defaultValue={appData.bvmt['margin-indication-even']}\n                        style={{ width: '50%' }}\n                        onBlur={e => {\n                            handleSettingsUpdate(\n                                lensPath([\n                                    'appData',\n                                    'bvmt',\n                                    'margin-indication-even',\n                                ]),\n                                e.target.value\n                            )\n                        }}\n                    />\n                </div>\n                <h3>{t('Notes')}</h3>\n                <div className=\"w-full flex\">\n                    <Formik\n                        initialValues={{\n                            note: pathOr('', ['note', 0, '@value'], manifest),\n                            language: pathOr(\n                                manifest.appData['bvmt'][\n                                    'default-ui-string-lang'\n                                ],\n                                ['note', 0, '@language'],\n                                manifest\n                            ),\n                        }}\n                        onSubmit={({ note, language }) => {\n                            handleSettingsUpdate(lensPath(['note', 0]), {\n                                '@value': note,\n                                '@language': language,\n                            })\n                        }}\n                        enableReinitialize\n                    >\n                        {({ values, handleChange, handleSubmit }) => (\n                            <div className=\"w-full flex\">\n                                <div className=\"w-1/2\">\n                                    <TextField\n                                        value={values.note}\n                                        onChange={handleChange}\n                                        style={{ width: '100%' }}\n                                        inputProps={{\n                                            id: 'note',\n                                        }}\n                                        multiline\n                                        rows=\"4\"\n                                        // @ts-ignore\n                                        onBlur={handleSubmit}\n                                    />\n                                </div>\n                                <FormControl className=\"self-end\">\n                                    <Select\n                                        native\n                                        value={values.language}\n                                        onChange={handleChange}\n                                        // @ts-ignore\n                                        onBlur={handleSubmit}\n                                        inputProps={{\n                                            id: 'language',\n                                        }}\n                                    >\n                                        <LanguageOptions />\n                                    </Select>\n                                </FormControl>\n                            </div>\n                        )}\n                    </Formik>\n                </div>\n                <DialogActions>\n                    <Button\n                        autoFocus\n                        onClick={props.handleClose}\n                        color=\"primary\"\n                    >\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}