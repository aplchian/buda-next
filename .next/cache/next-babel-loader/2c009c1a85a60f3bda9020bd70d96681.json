{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/PreviewImage.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react'; // @ts-ignore\n// import OpenSeaDragon from 'openseadragon'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { setImageView } from '../redux/actions/manifest';\nimport { pathOr } from 'ramda';\n\nvar getImageProps = function getImageProps(props) {\n  return {\n    zoom: props.pZoom,\n    center: {\n      x: props.pX,\n      y: props.pY\n    },\n    rotation: props.pRotation\n  };\n};\n\nvar PreviewImage = /*#__PURE__*/function (_React$Component) {\n  _inherits(PreviewImage, _React$Component);\n\n  var _super = _createSuper(PreviewImage);\n\n  function PreviewImage(props) {\n    var _this;\n\n    _classCallCheck(this, PreviewImage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      center: null,\n      zoom: null\n    };\n    return _this;\n  }\n\n  _createClass(PreviewImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var imageView = getImageProps(this.props);\n\n      if (this.props.iiif) {// const viewer = OpenSeaDragon({\n        //     id: `openseadragon${this.props.i}`,\n        //     degrees: this.state.degrees,\n        //     defaultZoomLevel: this.props.zoom,\n        //     showRotationControl: true,\n        //     tileSources: [this.props.iiif],\n        // })\n        //\n        // if (imageView) {\n        //     viewer.addHandler('open', () => {\n        //         if (imageView.center.x) {\n        //             viewer.viewport.panTo(imageView.center, true)\n        //             viewer.viewport.zoomTo(imageView.zoom)\n        //             viewer.viewport.setRotation(imageView.rotation)\n        //         }\n        //     })\n        // }\n        //\n        // this.setState({ viewer })\n      }\n    } // @ts-ignore\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var imageView = getImageProps(this.props);\n      var prevImage = getImageProps(prevProps);\n      var hasViewDiff = imageView.center.x !== prevImage.center.x || imageView.center.y !== prevImage.center.y || imageView.zoom !== prevImage.zoom || imageView.rotation !== prevImage.rotation;\n\n      if (imageView.center.x && hasViewDiff) {\n        this.state.viewer.viewport.panTo(imageView.center, true);\n        this.state.viewer.viewport.zoomTo(imageView.zoom);\n        this.state.viewer.viewport.setRotation(imageView.rotation);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _s = $RefreshSig$();\n\n      var ImageMenu = function ImageMenu() {\n        _s();\n\n        var _React$useState = React.useState(null),\n            _React$useState2 = _slicedToArray(_React$useState, 2),\n            anchorEl = _React$useState2[0],\n            setAnchorEl = _React$useState2[1];\n\n        var _useTranslation = useTranslation(),\n            t = _useTranslation.t;\n\n        var handleClick = function handleClick(event) {\n          setAnchorEl(event.currentTarget);\n        };\n\n        var handleClose = function handleClose() {\n          setAnchorEl(null);\n        };\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white',\n            position: 'absolute',\n            top: '0',\n            right: '0',\n            zIndex: 40\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'black'\n            },\n            className: \"flex content-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              \"aria-controls\": \"simple-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleClick,\n              style: {\n                color: 'white',\n                cursor: 'pointer'\n              },\n              children: \"more_vert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, _this2), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"simple-menu\",\n            anchorEl: anchorEl,\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: function onClick() {\n                var zoom = _this2.state.viewer.viewport.getZoom(true);\n\n                var center = _this2.state.viewer.viewport.getCenter(true);\n\n                var rotation = _this2.state.viewer.viewport.getRotation(true);\n\n                _this2.props.dispatch(setImageView({\n                  zoom: zoom,\n                  center: center,\n                  rotation: rotation\n                }));\n              },\n              children: t('Set Preview')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, _this2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, _this2);\n      };\n\n      _s(ImageMenu, \"NOVqlIwyI7yTJlgQ8M7otJhkbTY=\", false, function () {\n        return [useTranslation];\n      });\n\n      var ImageMenuOverlay = withStyles(function () {\n        return {\n          root: {\n            color: 'white'\n          }\n        };\n      })(ImageMenu);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-r border-gray-300 mr-2 w-1/2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          className: \"items-center flex justify-center mr-2\",\n          id: \"openseadragon\".concat(this.props.i),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '100%',\n              width: '100%',\n              backgroundColor: 'transparent',\n              position: 'absolute'\n            },\n            className: \"text-white\",\n            children: /*#__PURE__*/_jsxDEV(ImageMenuOverlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return PreviewImage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _pathOr = pathOr({\n    zoom: 0,\n    center: {\n      x: null,\n      y: null\n    },\n    rotation: 90\n  }, ['appData', 'bvmt', 'preview-image-view'], state.manifest),\n      zoom = _pathOr.zoom,\n      center = _pathOr.center,\n      rotation = _pathOr.rotation;\n\n  return {\n    pZoom: zoom,\n    pX: center.x,\n    pY: center.y,\n    pRotation: rotation\n  };\n}; // @ts-ignore\n\n\nexport default connect(mapStateToProps)(PreviewImage);","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/PreviewImage.tsx"],"names":["React","Menu","MenuItem","withStyles","Icon","useTranslation","connect","setImageView","pathOr","getImageProps","props","zoom","pZoom","center","x","pX","y","pY","rotation","pRotation","PreviewImage","state","imageView","iiif","prevProps","prevImage","hasViewDiff","viewer","viewport","panTo","zoomTo","setRotation","ImageMenu","useState","anchorEl","setAnchorEl","t","handleClick","event","currentTarget","handleClose","color","position","top","right","zIndex","backgroundColor","cursor","Boolean","getZoom","getCenter","getRotation","dispatch","ImageMenuOverlay","root","width","height","i","Component","mapStateToProps","manifest"],"mappings":"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","sourcesContent":["import React from 'react'\n// @ts-ignore\n// import OpenSeaDragon from 'openseadragon'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core'\nimport Icon from '@material-ui/core/Icon'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { setImageView } from '../redux/actions/manifest'\nimport { pathOr } from 'ramda'\n\ninterface IState {\n    degrees?: number\n    center: null | number\n    zoom: null | number\n    viewer?: any\n}\n\ninterface IProps {\n    iiif?: string\n    i: number\n    degrees?: number\n    zoom?: number\n    pZoom: number\n    pX: number\n    pY: number\n    dispatch: any\n}\n\nconst getImageProps = (props: any) => {\n    return {\n        zoom: props.pZoom,\n        center: {\n            x: props.pX,\n            y: props.pY,\n        },\n        rotation: props.pRotation,\n    }\n}\n\nclass PreviewImage extends React.Component<IProps, IState> {\n    constructor(props: Readonly<IProps>) {\n        super(props)\n        this.state = {\n            center: null,\n            zoom: null,\n        }\n    }\n    componentDidMount() {\n        const imageView = getImageProps(this.props)\n        if (this.props.iiif) {\n            // const viewer = OpenSeaDragon({\n            //     id: `openseadragon${this.props.i}`,\n            //     degrees: this.state.degrees,\n            //     defaultZoomLevel: this.props.zoom,\n            //     showRotationControl: true,\n            //     tileSources: [this.props.iiif],\n            // })\n            //\n            // if (imageView) {\n            //     viewer.addHandler('open', () => {\n            //         if (imageView.center.x) {\n            //             viewer.viewport.panTo(imageView.center, true)\n            //             viewer.viewport.zoomTo(imageView.zoom)\n            //             viewer.viewport.setRotation(imageView.rotation)\n            //         }\n            //     })\n            // }\n            //\n            // this.setState({ viewer })\n        }\n    }\n\n    // @ts-ignore\n    componentDidUpdate(prevProps: {\n        imageView: {\n            center: { x: number; y: number }\n            zoom: number\n            rotation: number\n        }\n    }) {\n        const imageView = getImageProps(this.props)\n        const prevImage = getImageProps(prevProps)\n        const hasViewDiff =\n            imageView.center.x !== prevImage.center.x ||\n            imageView.center.y !== prevImage.center.y ||\n            imageView.zoom !== prevImage.zoom ||\n            imageView.rotation !== prevImage.rotation\n\n        if (imageView.center.x && hasViewDiff) {\n            this.state.viewer.viewport.panTo(imageView.center, true)\n            this.state.viewer.viewport.zoomTo(imageView.zoom)\n            this.state.viewer.viewport.setRotation(imageView.rotation)\n        }\n    }\n\n    render() {\n        const ImageMenu = () => {\n            const [anchorEl, setAnchorEl] = React.useState(null)\n            const { t } = useTranslation()\n\n            const handleClick = (event: { currentTarget: any }) => {\n                setAnchorEl(event.currentTarget)\n            }\n\n            const handleClose = () => {\n                setAnchorEl(null)\n            }\n            return (\n                <div\n                    style={{\n                        color: 'white',\n                        position: 'absolute',\n                        top: '0',\n                        right: '0',\n                        zIndex: 40,\n                    }}\n                >\n                    <div\n                        style={{ backgroundColor: 'black' }}\n                        className=\"flex content-center justify-center\"\n                    >\n                        <Icon\n                            aria-controls=\"simple-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={handleClick}\n                            style={{ color: 'white', cursor: 'pointer' }}\n                        >\n                            more_vert\n                        </Icon>\n                    </div>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem\n                            onClick={() => {\n                                const zoom = this.state.viewer.viewport.getZoom(\n                                    true\n                                )\n                                const center = this.state.viewer.viewport.getCenter(\n                                    true\n                                )\n                                const rotation = this.state.viewer.viewport.getRotation(\n                                    true\n                                )\n\n                                this.props.dispatch(\n                                    setImageView({\n                                        zoom,\n                                        center,\n                                        rotation,\n                                    })\n                                )\n                            }}\n                        >\n                            {t('Set Preview')}\n                        </MenuItem>\n                    </Menu>\n                </div>\n            )\n        }\n\n        const ImageMenuOverlay = withStyles(() => ({\n            root: {\n                color: 'white',\n            },\n        }))(ImageMenu)\n\n        return (\n            <div className=\"border-r border-gray-300 mr-2 w-1/2\">\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                    }}\n                    className=\"items-center flex justify-center mr-2\"\n                    id={`openseadragon${this.props.i}`}\n                >\n                    <div\n                        style={{\n                            height: '100%',\n                            width: '100%',\n                            backgroundColor: 'transparent',\n                            position: 'absolute',\n                        }}\n                        className=\"text-white\"\n                    >\n                        <ImageMenuOverlay />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state: any) {\n    const { zoom, center, rotation } = pathOr(\n        {\n            zoom: 0,\n            center: {\n                x: null,\n                y: null,\n            },\n            rotation: 90,\n        },\n        ['appData', 'bvmt', 'preview-image-view'],\n        state.manifest\n    )\n    return {\n        pZoom: zoom,\n        pX: center.x,\n        pY: center.y,\n        pRotation: rotation,\n    }\n}\n\n// @ts-ignore\nexport default connect(mapStateToProps)(PreviewImage)\n"]},"metadata":{},"sourceType":"module"}