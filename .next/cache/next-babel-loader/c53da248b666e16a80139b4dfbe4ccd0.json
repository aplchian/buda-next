{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/PreviewImage.tsx\";\nimport React from 'react'; // @ts-ignore\n\nimport OpenSeaDragon from 'openseadragon';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { setImageView } from '../redux/actions/manifest';\nimport { pathOr } from 'ramda';\n\nconst getImageProps = props => {\n  return {\n    zoom: props.pZoom,\n    center: {\n      x: props.pX,\n      y: props.pY\n    },\n    rotation: props.pRotation\n  };\n};\n\nclass PreviewImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: null,\n      zoom: null\n    };\n  }\n\n  componentDidMount() {\n    const imageView = getImageProps(this.props);\n\n    if (this.props.iiif && false) {\n      const viewer = OpenSeaDragon({\n        id: `openseadragon${this.props.i}`,\n        degrees: this.state.degrees,\n        defaultZoomLevel: this.props.zoom,\n        showRotationControl: true,\n        tileSources: [this.props.iiif]\n      });\n\n      if (imageView) {\n        viewer.addHandler('open', () => {\n          if (imageView.center.x) {\n            viewer.viewport.panTo(imageView.center, true);\n            viewer.viewport.zoomTo(imageView.zoom);\n            viewer.viewport.setRotation(imageView.rotation);\n          }\n        });\n      }\n\n      this.setState({\n        viewer\n      });\n    }\n  } // @ts-ignore\n\n\n  componentDidUpdate(prevProps) {\n    const imageView = getImageProps(this.props);\n    const prevImage = getImageProps(prevProps);\n    const hasViewDiff = imageView.center.x !== prevImage.center.x || imageView.center.y !== prevImage.center.y || imageView.zoom !== prevImage.zoom || imageView.rotation !== prevImage.rotation;\n\n    if (imageView.center.x && hasViewDiff) {\n      this.state.viewer.viewport.panTo(imageView.center, true);\n      this.state.viewer.viewport.zoomTo(imageView.zoom);\n      this.state.viewer.viewport.setRotation(imageView.rotation);\n    }\n  }\n\n  render() {\n    const ImageMenu = () => {\n      const [anchorEl, setAnchorEl] = React.useState(null);\n      const {\n        t\n      } = useTranslation();\n\n      const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n\n      const handleClose = () => {\n        setAnchorEl(null);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          position: 'absolute',\n          top: '0',\n          right: '0',\n          zIndex: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'black'\n          },\n          className: \"flex content-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            \"aria-controls\": \"simple-menu\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleClick,\n            style: {\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"more_vert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"simple-menu\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              const zoom = this.state.viewer.viewport.getZoom(true);\n              const center = this.state.viewer.viewport.getCenter(true);\n              const rotation = this.state.viewer.viewport.getRotation(true);\n              this.props.dispatch(setImageView({\n                zoom,\n                center,\n                rotation\n              }));\n            },\n            children: t('Set Preview')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    };\n\n    const ImageMenuOverlay = withStyles(() => ({\n      root: {\n        color: 'white'\n      }\n    }))(ImageMenu);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-r border-gray-300 mr-2 w-1/2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'relative'\n        },\n        className: \"items-center flex justify-center mr-2\",\n        id: `openseadragon${this.props.i}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100%',\n            width: '100%',\n            backgroundColor: 'transparent',\n            position: 'absolute'\n          },\n          className: \"text-white\",\n          children: /*#__PURE__*/_jsxDEV(ImageMenuOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  const {\n    zoom,\n    center,\n    rotation\n  } = pathOr({\n    zoom: 0,\n    center: {\n      x: null,\n      y: null\n    },\n    rotation: 90\n  }, ['appData', 'bvmt', 'preview-image-view'], state.manifest);\n  return {\n    pZoom: zoom,\n    pX: center.x,\n    pY: center.y,\n    pRotation: rotation\n  };\n}; // @ts-ignore\n\n\nexport default connect(mapStateToProps)(PreviewImage);","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/PreviewImage.tsx"],"names":["React","OpenSeaDragon","Menu","MenuItem","withStyles","Icon","useTranslation","connect","setImageView","pathOr","getImageProps","props","zoom","pZoom","center","x","pX","y","pY","rotation","pRotation","PreviewImage","Component","constructor","state","componentDidMount","imageView","iiif","viewer","id","i","degrees","defaultZoomLevel","showRotationControl","tileSources","addHandler","viewport","panTo","zoomTo","setRotation","setState","componentDidUpdate","prevProps","prevImage","hasViewDiff","render","ImageMenu","anchorEl","setAnchorEl","useState","t","handleClick","event","currentTarget","handleClose","color","position","top","right","zIndex","backgroundColor","cursor","Boolean","getZoom","getCenter","getRotation","dispatch","ImageMenuOverlay","root","width","height","mapStateToProps","manifest"],"mappings":"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","sourcesContent":["import React from 'react'\n// @ts-ignore\nimport OpenSeaDragon from 'openseadragon'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core'\nimport Icon from '@material-ui/core/Icon'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { setImageView } from '../redux/actions/manifest'\nimport { pathOr } from 'ramda'\n\ninterface IState {\n    degrees?: number\n    center: null | number\n    zoom: null | number\n    viewer?: any\n}\n\ninterface IProps {\n    iiif?: string\n    i: number\n    degrees?: number\n    zoom?: number\n    pZoom: number\n    pX: number\n    pY: number\n    dispatch: any\n}\n\nconst getImageProps = (props: any) => {\n    return {\n        zoom: props.pZoom,\n        center: {\n            x: props.pX,\n            y: props.pY,\n        },\n        rotation: props.pRotation,\n    }\n}\n\nclass PreviewImage extends React.Component<IProps, IState> {\n    constructor(props: Readonly<IProps>) {\n        super(props)\n        this.state = {\n            center: null,\n            zoom: null,\n        }\n    }\n    componentDidMount() {\n        const imageView = getImageProps(this.props)\n        if (this.props.iiif && typeof window !== 'undefined') {\n            const viewer = OpenSeaDragon({\n                id: `openseadragon${this.props.i}`,\n                degrees: this.state.degrees,\n                defaultZoomLevel: this.props.zoom,\n                showRotationControl: true,\n                tileSources: [this.props.iiif],\n            })\n\n            if (imageView) {\n                viewer.addHandler('open', () => {\n                    if (imageView.center.x) {\n                        viewer.viewport.panTo(imageView.center, true)\n                        viewer.viewport.zoomTo(imageView.zoom)\n                        viewer.viewport.setRotation(imageView.rotation)\n                    }\n                })\n            }\n\n            this.setState({ viewer })\n        }\n    }\n\n    // @ts-ignore\n    componentDidUpdate(prevProps: {\n        imageView: {\n            center: { x: number; y: number }\n            zoom: number\n            rotation: number\n        }\n    }) {\n        const imageView = getImageProps(this.props)\n        const prevImage = getImageProps(prevProps)\n        const hasViewDiff =\n            imageView.center.x !== prevImage.center.x ||\n            imageView.center.y !== prevImage.center.y ||\n            imageView.zoom !== prevImage.zoom ||\n            imageView.rotation !== prevImage.rotation\n\n        if (imageView.center.x && hasViewDiff) {\n            this.state.viewer.viewport.panTo(imageView.center, true)\n            this.state.viewer.viewport.zoomTo(imageView.zoom)\n            this.state.viewer.viewport.setRotation(imageView.rotation)\n        }\n    }\n\n    render() {\n        const ImageMenu = () => {\n            const [anchorEl, setAnchorEl] = React.useState(null)\n            const { t } = useTranslation()\n\n            const handleClick = (event: { currentTarget: any }) => {\n                setAnchorEl(event.currentTarget)\n            }\n\n            const handleClose = () => {\n                setAnchorEl(null)\n            }\n            return (\n                <div\n                    style={{\n                        color: 'white',\n                        position: 'absolute',\n                        top: '0',\n                        right: '0',\n                        zIndex: 40,\n                    }}\n                >\n                    <div\n                        style={{ backgroundColor: 'black' }}\n                        className=\"flex content-center justify-center\"\n                    >\n                        <Icon\n                            aria-controls=\"simple-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={handleClick}\n                            style={{ color: 'white', cursor: 'pointer' }}\n                        >\n                            more_vert\n                        </Icon>\n                    </div>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem\n                            onClick={() => {\n                                const zoom = this.state.viewer.viewport.getZoom(\n                                    true\n                                )\n                                const center = this.state.viewer.viewport.getCenter(\n                                    true\n                                )\n                                const rotation = this.state.viewer.viewport.getRotation(\n                                    true\n                                )\n\n                                this.props.dispatch(\n                                    setImageView({\n                                        zoom,\n                                        center,\n                                        rotation,\n                                    })\n                                )\n                            }}\n                        >\n                            {t('Set Preview')}\n                        </MenuItem>\n                    </Menu>\n                </div>\n            )\n        }\n\n        const ImageMenuOverlay = withStyles(() => ({\n            root: {\n                color: 'white',\n            },\n        }))(ImageMenu)\n\n        return (\n            <div className=\"border-r border-gray-300 mr-2 w-1/2\">\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                    }}\n                    className=\"items-center flex justify-center mr-2\"\n                    id={`openseadragon${this.props.i}`}\n                >\n                    <div\n                        style={{\n                            height: '100%',\n                            width: '100%',\n                            backgroundColor: 'transparent',\n                            position: 'absolute',\n                        }}\n                        className=\"text-white\"\n                    >\n                        <ImageMenuOverlay />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state: any) {\n    const { zoom, center, rotation } = pathOr(\n        {\n            zoom: 0,\n            center: {\n                x: null,\n                y: null,\n            },\n            rotation: 90,\n        },\n        ['appData', 'bvmt', 'preview-image-view'],\n        state.manifest\n    )\n    return {\n        pZoom: zoom,\n        pX: center.x,\n        pY: center.y,\n        pRotation: rotation,\n    }\n}\n\n// @ts-ignore\nexport default connect(mapStateToProps)(PreviewImage)\n"]},"metadata":{},"sourceType":"module"}