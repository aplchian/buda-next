{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport uuidv4 from 'uuid/v4';\nimport axios from 'axios';\nimport { assoc, lensPath, map, over } from 'ramda';\nvar apiroot = 'https://iiifpres.bdrc.io';\n\nfunction getImageList(_x) {\n  return _getImageList.apply(this, arguments);\n}\n\nfunction _getImageList() {\n  _getImageList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(volumeQname) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(apiroot, \"/il/v:\").concat(volumeQname));\n\n          case 2:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data.data.map(function (_ref) {\n              var filename = _ref.filename;\n              return {\n                filename: filename\n              };\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getImageList.apply(this, arguments);\n}\n\nfunction getManifest(_x2) {\n  return _getManifest.apply(this, arguments);\n}\n\nfunction _getManifest() {\n  _getManifest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(volumeQname) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(apiroot, \"/bvm/ig:\").concat(volumeQname));\n\n          case 2:\n            _yield$axios$get = _context2.sent;\n            data = _yield$axios$get.data;\n            return _context2.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getManifest.apply(this, arguments);\n}\n\nexport function getOrInitManifest(_x3, _x4) {\n  return _getOrInitManifest.apply(this, arguments);\n}\n\nfunction _getOrInitManifest() {\n  _getOrInitManifest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(volumeQname, options) {\n    var manifest, images, addIdsToImages;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return getManifest(volumeQname);\n\n          case 3:\n            manifest = _context3.sent;\n            _context3.next = 16;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('err!', _context3.t0);\n            console.log('err.response.status', _context3.t0.response.status);\n\n            if (!(_context3.t0.response.status !== 404)) {\n              _context3.next = 12;\n              break;\n            }\n\n            throw _context3.t0;\n\n          case 12:\n            _context3.next = 14;\n            return getImageList(volumeQname);\n\n          case 14:\n            images = _context3.sent;\n            manifest = initManifestFromImageList(images, volumeQname, options);\n\n          case 16:\n            addIdsToImages = function addIdsToImages(manifest) {\n              var imageListLens = lensPath(['view', 'view1', 'imagelist']);\n              return over(imageListLens, map(function (img) {\n                return assoc('id', uuidv4(), img);\n              }), manifest);\n            };\n\n            manifest.appData.bvmt['default-ui-string-lang'] = options.uiLanguage;\n            return _context3.abrupt(\"return\", {\n              manifest: addIdsToImages(manifest)\n            });\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  }));\n  return _getOrInitManifest.apply(this, arguments);\n}\n\nfunction initManifestFromImageList(images, volumeQname, options) {\n  return {\n    'imggroup': volumeQname,\n    'volume-label': [],\n    // an option\n    'spec-version': '0.1.0',\n    rev: null,\n    'viewing-direction': 'top-to-bottom',\n    status: 'editing',\n    note: [],\n    changes: [],\n    attribution: [],\n    // the attribution of the data in the manifest, if the user wants to be credited\n    // a reasonable default\n    pagination: [{\n      id: 'pgfolios',\n      type: 'folios'\n    }],\n    'default-view': 'view1',\n    view: {\n      view1: {\n        imagelist: images\n      }\n    },\n    appData: {\n      bvmt: {\n        'metadata-for-bvmt-ver': '0.1.0',\n        // TODO: ajust if necessary\n        'default-ui-string-lang': options.uiLanguage,\n        'default-vol-string-lang': 'bo',\n        // reasonable default for now, should be an option\n        'margin-indication-even': '{pagenum:bo}',\n        // an option\n        'margin-volname': '',\n        // an option too\n        'margin-indication-odd': '',\n        'preview-image-view': {\n          zoom: 0,\n          center: {\n            x: null,\n            y: null\n          },\n          rotation: 0\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/api/getManifest.ts"],"names":["uuidv4","axios","assoc","lensPath","map","over","apiroot","getImageList","volumeQname","get","data","filename","getManifest","getOrInitManifest","options","manifest","console","log","response","status","images","initManifestFromImageList","addIdsToImages","imageListLens","img","appData","bvmt","uiLanguage","rev","note","changes","attribution","pagination","id","type","view","view1","imagelist","zoom","center","x","y","rotation"],"mappings":"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","sourcesContent":["import uuidv4 from 'uuid/v4'\nimport axios from 'axios'\nimport { assoc, lensPath, map, over } from 'ramda'\nimport { Buda } from '../../buda/types'\n\nvar apiroot = 'https://iiifpres.bdrc.io'\n\ninterface Options {\n    uiLanguage: string\n}\n\nasync function getImageList(volumeQname: string) {\n    const data = await axios.get(`${apiroot}/il/v:${volumeQname}`)\n    return data.data.map(({ filename }: { filename: string }) => ({\n        filename,\n    }))\n}\n\nasync function getManifest(volumeQname: string) {\n    // this returns an existing manifest, might return a 404\n    const { data } = await axios.get(`${apiroot}/bvm/ig:${volumeQname}`)\n    return data\n}\n\nexport async function getOrInitManifest(volumeQname: string, options: Options) {\n    var manifest\n\n    try {\n        manifest = await getManifest(volumeQname)\n    } catch (err) {\n        console.log('err!', err)\n        console.log('err.response.status', err.response.status)\n        if (err.response.status !== 404) {\n            throw err\n        }\n        const images = await getImageList(volumeQname)\n        manifest = initManifestFromImageList(images, volumeQname, options)\n    }\n    const addIdsToImages = (manifest: Buda.Manifest) => {\n        const imageListLens = lensPath(['view', 'view1', 'imagelist'])\n        return over(\n            imageListLens,\n            map(img => assoc('id', uuidv4(), img)),\n            manifest\n        )\n    }\n    manifest.appData.bvmt['default-ui-string-lang'] = options.uiLanguage\n    return { manifest: addIdsToImages(manifest) }\n}\n\nfunction initManifestFromImageList(\n    images: Buda.Image[],\n    volumeQname: string,\n    options: Options\n): Buda.Manifest {\n    return {\n        'imggroup': volumeQname,\n        'volume-label': [], // an option\n        'spec-version': '0.1.0',\n        rev: null,\n        'viewing-direction': 'top-to-bottom',\n        status: 'editing',\n        note: [],\n        changes: [],\n        attribution: [], // the attribution of the data in the manifest, if the user wants to be credited\n        // a reasonable default\n        pagination: [\n            {\n                id: 'pgfolios',\n                type: 'folios',\n            },\n        ],\n        'default-view': 'view1',\n        view: {\n            view1: {\n                imagelist: images,\n            },\n        },\n        appData: {\n            bvmt: {\n                'metadata-for-bvmt-ver': '0.1.0', // TODO: ajust if necessary\n                'default-ui-string-lang': options.uiLanguage,\n                'default-vol-string-lang': 'bo', // reasonable default for now, should be an option\n                'margin-indication-even': '{pagenum:bo}', // an option\n                'margin-volname': '', // an option too\n                'margin-indication-odd': '',\n                'preview-image-view': {\n                    zoom: 0,\n                    center: { x: null, y: null },\n                    rotation: 0,\n                },\n            },\n        },\n    }\n}\n"]},"metadata":{},"sourceType":"module"}