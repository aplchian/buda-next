{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/react-auth0-spa.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport auth0 from 'auth0-js'; // import history from './utils/history'\n\nconst DEFAULT_REDIRECT_CALLBACK = () => {// window.history.replaceState({}, document.title, window.location.pathname)\n};\n\nvar auth;\nexport const Auth0Context = /*#__PURE__*/React.createContext({});\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = (_ref) => {\n  let {\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK\n  } = _ref,\n      initOptions = _objectWithoutProperties(_ref, [\"children\", \"onRedirectCallback\"]);\n\n  const {\n    0: isAuthenticated,\n    1: setIsAuthenticated\n  } = useState();\n  const {\n    0: user,\n    1: setUser\n  } = useState();\n  const {\n    0: auth0Client\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: popupOpen\n  } = useState(false);\n  useEffect(() => {\n    const initAuth0 = async () => {\n      auth = new auth0.WebAuth(initOptions);\n      handleAuthentication();\n      getUser();\n    };\n\n    initAuth0(); // eslint-disable-next-line\n  }, []);\n\n  const getUser = async () => {\n    if (checkAuthenticated()) {\n      const token = localStorage.getItem('access_token');\n\n      if (token) {\n        // @ts-ignore\n        auth.client.userInfo(token, async (err, profile) => {\n          if (profile) {\n            const app_token = localStorage.getItem('id_token');\n            const bdu = await axios.get('//editserv.bdrc.io/resource-nc/user/me', {\n              headers: {\n                Authorization: 'Bearer ' + app_token\n              }\n            });\n            profile.bdrcData = bdu.data;\n            profile.bdrcID = Object.keys(bdu.data).map(k => k.replace(/^.*?[/]([^/]+)$/, 'bdu:$1')).join();\n            setUser(profile);\n            const isAuthenticated = checkAuthenticated();\n            setIsAuthenticated(isAuthenticated);\n            setLoading(false);\n            console.log('profile', profile);\n          }\n        });\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const login = redirect => {\n    console.log('redirect', redirect);\n    if (redirect) localStorage.setItem('auth0_redirect', JSON.stringify(redirect));else localStorage.setItem('auth0_redirect', '/');\n    auth.authorize();\n  };\n\n  const checkAuthenticated = () => {\n    // Check whether the current time is past the\n    // Access Token's expiry time\n    let item = localStorage.getItem('expires_at');\n    if (!item) return false;\n    let expiresAt = JSON.parse(item);\n    return new Date().getTime() < expiresAt;\n  };\n\n  const setSession = async authResult => {\n    // Set the time that the Access Token will expire at\n    let expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    console.log('session', authResult);\n    getUser();\n  };\n\n  const handleAuthentication = () => {\n    auth.parseHash(async (err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        setSession(authResult);\n        let redirect = JSON.parse(localStorage.getItem('auth0_redirect'));\n\n        if (redirect) {\n          // history.push(redirect)\n          // TODO find something better to force rerendering\n          window.location.reload();\n        } // else window.history.replaceState(null, null, ' ')\n\n      } else if (err) {\n        console.log(err);\n      }\n    });\n  };\n  /*\n  const initAuth0 = async () => {\n    \n    const auth0FromHook = await createAuth0Client(initOptions);\n     setAuth0(auth0FromHook);      \n     if (window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")) {\n        try {\n          const { appState } = await auth0FromHook.handleRedirectCallback();\n          onRedirectCallback(appState);\n        }\n        catch(e) {\n          console.error(\"auth0 error\",e)\n        }\n    }\n     const isAuthenticated = await auth0FromHook.isAuthenticated();\n     setIsAuthenticated(isAuthenticated);\n     if (isAuthenticated) {\n      const user = await auth0FromHook.getUser();\n      setUser(user);\n    }\n     setLoading(false);\n  };\n  const loginWithPopup = async (params = {}) => {\n  setPopupOpen(true);\n  try {\n    await auth0Client.loginWithPopup(params);\n  } catch (error) {\n    console.error(error);\n  } finally {\n    setPopupOpen(false);\n  }\n  const user = await auth0Client.getUser();\n  setUser(user);\n  setIsAuthenticated(true);\n  };\n  const handleRedirectCallback = async () => {\n  setLoading(true);\n  await auth0Client.handleRedirectCallback();\n  const user = await auth0Client.getUser();\n  setLoading(false);\n  setIsAuthenticated(true);\n  setUser(user);\n  };\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Auth0Context.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      popupOpen,\n      // handleRedirectCallback,\n      // @ts-ignore\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      // @ts-ignore\n      loginWithRedirect: (...p) => login(...p),\n      // @ts-ignore\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getTokenWithPopup: (...p) => // @ts-ignore\n      auth0Client.getTokenWithPopup(...p),\n      logout: (...p) => {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('id_token');\n        localStorage.removeItem('expires_at');\n        setIsAuthenticated(false);\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/react-auth0-spa.tsx"],"names":["React","useContext","useEffect","useState","axios","auth0","DEFAULT_REDIRECT_CALLBACK","auth","Auth0Context","createContext","useAuth0","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","loading","setLoading","popupOpen","initAuth0","WebAuth","handleAuthentication","getUser","checkAuthenticated","token","localStorage","getItem","client","userInfo","err","profile","app_token","bdu","get","headers","Authorization","bdrcData","data","bdrcID","Object","keys","map","k","replace","join","console","log","login","redirect","setItem","JSON","stringify","authorize","item","expiresAt","parse","Date","getTime","setSession","authResult","expiresIn","accessToken","idToken","parseHash","window","location","reload","getIdTokenClaims","p","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","removeItem"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport auth0, { AuthOptions } from 'auth0-js'\n// import history from './utils/history'\n\nconst DEFAULT_REDIRECT_CALLBACK = () => {\n    // window.history.replaceState({}, document.title, window.location.pathname)\n}\n\nvar auth: auth0.WebAuth\n\nexport const Auth0Context = React.createContext({})\n\ninterface AuthUser {\n    user?: any\n    loading?: boolean\n    isAuthenticated: boolean\n    loginWithRedirect: any\n    logout: any\n}\nexport const useAuth0 = (): AuthUser => useContext(Auth0Context) as AuthUser\n\nexport const Auth0Provider = ({\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n    ...initOptions\n}: {s\n    children: React.ReactElement\n    onRedirectCallback: (appState: { targetUrl: any }) => void\n}) => {\n    const [isAuthenticated, setIsAuthenticated] = useState<boolean>()\n    const [user, setUser] = useState()\n    const [auth0Client] = useState()\n    const [loading, setLoading] = useState(true)\n    const [popupOpen] = useState(false)\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            auth = new auth0.WebAuth(initOptions as AuthOptions)\n            handleAuthentication()\n            getUser()\n        }\n\n        initAuth0()\n        // eslint-disable-next-line\n    }, [])\n\n    const getUser = async () => {\n        if (checkAuthenticated()) {\n            const token = localStorage.getItem('access_token')\n            if (token) {\n                // @ts-ignore\n                auth.client.userInfo(token, async (\n                    err: any,\n                    // @ts-ignore\n                    profile: {\n                        (prevState: undefined): undefined\n                        bdrcData?: any\n                        bdrcID?: any\n                    }\n                ) => {\n                    if (profile) {\n                        const app_token = localStorage.getItem('id_token')\n                        const bdu = await axios.get(\n                            '//editserv.bdrc.io/resource-nc/user/me',\n                            {\n                                headers: {\n                                    Authorization: 'Bearer ' + app_token,\n                                },\n                            }\n                        )\n                        profile.bdrcData = bdu.data\n                        profile.bdrcID = Object.keys(bdu.data)\n                            .map(k => k.replace(/^.*?[/]([^/]+)$/, 'bdu:$1'))\n                            .join()\n                        setUser(profile)\n\n                        const isAuthenticated = checkAuthenticated()\n                        setIsAuthenticated(isAuthenticated)\n\n                        setLoading(false)\n\n                        console.log('profile', profile)\n                    }\n                })\n            }\n        } else {\n            setLoading(false)\n        }\n    }\n\n    const login = (redirect: any) => {\n        console.log('redirect', redirect)\n        if (redirect)\n            localStorage.setItem('auth0_redirect', JSON.stringify(redirect))\n        else localStorage.setItem('auth0_redirect', '/')\n        auth.authorize()\n    }\n\n    const checkAuthenticated = () => {\n        // Check whether the current time is past the\n        // Access Token's expiry time\n        let item = localStorage.getItem('expires_at')\n        if (!item) return false\n        let expiresAt = JSON.parse(item)\n        return new Date().getTime() < expiresAt\n    }\n\n    const setSession = async (authResult: auth0.Auth0DecodedHash) => {\n        // Set the time that the Access Token will expire at\n        let expiresAt = JSON.stringify(\n            authResult.expiresIn * 1000 + new Date().getTime()\n        )\n        localStorage.setItem('access_token', authResult.accessToken)\n        localStorage.setItem('id_token', authResult.idToken)\n        localStorage.setItem('expires_at', expiresAt)\n\n        console.log('session', authResult)\n\n        getUser()\n    }\n\n    const handleAuthentication = () => {\n        auth.parseHash(async (err, authResult) => {\n            if (authResult && authResult.accessToken && authResult.idToken) {\n                setSession(authResult)\n                let redirect = JSON.parse(\n                    localStorage.getItem('auth0_redirect')\n                )\n                if (redirect) {\n                    // history.push(redirect)\n                    // TODO find something better to force rerendering\n                    window.location.reload()\n                }\n                // else window.history.replaceState(null, null, ' ')\n            } else if (err) {\n                console.log(err)\n            }\n        })\n    }\n\n    /*\n    const initAuth0 = async () => {\n      \n      const auth0FromHook = await createAuth0Client(initOptions);\n\n      setAuth0(auth0FromHook);      \n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n          try {\n            const { appState } = await auth0FromHook.handleRedirectCallback();\n            onRedirectCallback(appState);\n          }\n          catch(e) {\n            console.error(\"auth0 error\",e)\n          }\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n    */\n\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                // handleRedirectCallback,\n                // @ts-ignore\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                // @ts-ignore\n                loginWithRedirect: (...p) => login(...p),\n                // @ts-ignore\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p: any) =>\n                    // @ts-ignore\n                    auth0Client.getTokenWithPopup(...p),\n                logout: (...p: any) => {\n                    localStorage.removeItem('access_token')\n                    localStorage.removeItem('id_token')\n                    localStorage.removeItem('expires_at')\n                    setIsAuthenticated(false)\n                },\n            }}\n        >\n            {children}\n        </Auth0Context.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}