{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport '../buda/src/index.css';\nimport AppBar from './components/AppBar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Card from './components/Card';\nimport { DndProvider } from 'react-dnd';\nimport FilterList from './components/FilterList';\nimport Backend from 'react-dnd-html5-backend';\nimport postUpdate from './api/postUpdate';\nimport { useTranslation } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useAuth0 } from '../buda/src/react-auth0-spa';\nimport { addIndex, assoc, curry, dissoc, inc, insert, lensPath, map, over, propEq, reduce, reject, set, view } from 'ramda';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Dialog from './components/Dialog';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CardDropZone from './components/CardDropZone';\nimport { getOrInitManifest } from './api/getManifest';\nimport VolumeSearch from './components/VolumeSearch';\nimport UpdateManifestError from './components/UpdateManifestError';\nimport { setManifest } from './redux/actions/manifest';\nimport { connect } from 'react-redux';\nconst mapIndex = addIndex(map);\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#212121'\n    }\n  }\n});\nconst imageListLens = lensPath(['view', 'view1', 'imagelist']);\n\nfunction App(props) {\n  const {\n    manifest\n  } = props;\n  const [settingsDialogOpen, setSettingsDialog] = React.useState(false);\n  const imageList = view(imageListLens, manifest) || [];\n  const [isFetching, setIsFetching] = React.useState(false);\n  const [fetchErr, setFetchErr] = React.useState(null);\n  const [renderToIdx, setRenderToIdx] = React.useState(9);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [postErr, setPostErr] = React.useState(null);\n  const {\n    dispatch\n  } = props;\n  React.useEffect(() => {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const volume = params.get('volume');\n    setFetchErr(null);\n\n    if (!volume) {\n      setIsFetching(false);\n    } else {\n      const getData = async () => {\n        setIsFetching(true);\n\n        try {\n          const {\n            manifest\n          } = await getOrInitManifest(volume, {\n            uiLanguage: 'en'\n          });\n          setIsFetching(false);\n          dispatch(setManifest(manifest));\n        } catch (err) {\n          setIsFetching(false);\n          setFetchErr(err.message);\n        }\n      };\n\n      getData();\n    }\n  }, [dispatch]);\n\n  const saveUpdatesToManifest = async auth => {\n    try {\n      const removeCollapsed = map(dissoc('collapsed'));\n      const formattedManifest = over(imageListLens, removeCollapsed, manifest);\n      await postUpdate(formattedManifest, auth);\n    } catch (error) {\n      if (error.response) {\n        setPostErr(error.response.data);\n      } else if (error.request) {\n        setPostErr(error.request);\n      } else {\n        setPostErr(error.message);\n      }\n    }\n  };\n\n  const updateImageList = updatedImageList => {\n    props.dispatch(setManifest(set(imageListLens, updatedImageList, manifest)));\n  };\n\n  const handleLoadMore = () => {\n    setRenderToIdx(renderToIdx + 10); // setting this isfetching stops the infinite scroll from getting caught in a loop\n\n    setIsLoadingMore(true);\n    setTimeout(() => {\n      setIsLoadingMore(false);\n    }, 3000);\n  };\n\n  const sectionInUseCount = sectionId => {\n    return reduce((acc, val) => {\n      return val.sectionId === sectionId ? ++acc : acc;\n    }, 0, imageList);\n  };\n\n  const handleSettingsUpdate = curry((lens, value) => {\n    const updatedManifest = set(lens, value, manifest);\n    props.dispatch(setManifest(updatedManifest));\n  });\n\n  const rearrangeImage = (imageId, idx) => {\n    const {\n      image,\n      images\n    } = reduce((acc, val) => {\n      if (val.id === imageId) {\n        const valToRemove = assoc('remove', true, val);\n        acc.image = val;\n        acc.images.push(valToRemove);\n        return acc;\n      }\n\n      acc.images.push(val);\n      return acc;\n    }, {\n      image: null,\n      images: []\n    }, imageList);\n    const updatedImageList = reject(propEq('remove', true), insert(inc(idx), image, images));\n    updateImageList(updatedImageList);\n  };\n\n  const foldCheckedImages = () => {\n    const updatedImageList = map(image => image.reviewed ? assoc('collapsed', true, image) : image, imageList);\n    updateImageList(updatedImageList);\n  };\n\n  const {\n    t\n  } = useTranslation();\n  const auth = useAuth0();\n  const imageListLength = imageList.length;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: Backend,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        manifest: manifest,\n        handleSettingsUpdate: handleSettingsUpdate,\n        children: !manifest.isDefault && /*#__PURE__*/_jsxDEV(FilterList, {\n          handleSettingsUpdate: handleSettingsUpdate,\n          manifest: manifest,\n          foldCheckedImages: foldCheckedImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UpdateManifestError, {\n        postErr: postErr,\n        setPostErr: setPostErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), manifest.isDefault ? /*#__PURE__*/_jsxDEV(VolumeSearch, _objectSpread({\n        isFetching: isFetching,\n        fetchErr: fetchErr\n      }, manifest && manifest['imggroup'] ? {\n        forVolume: manifest['imggroup']\n      } : {}), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        style: {\n          paddingTop: 125\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Dialog, {\n            appData: manifest.appData,\n            sectionInUseCount: sectionInUseCount,\n            open: settingsDialogOpen,\n            handleClose: () => setSettingsDialog(false),\n            manifest: manifest,\n            handleSettingsUpdate: handleSettingsUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container mx-auto flex flex-row py-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/2 flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600 text-sm\",\n                children: t('Volume')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold text-xl mb-3\",\n                children: [manifest['imggroup'], /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => setSettingsDialog(true),\n                  className: \"underline text-md font-medium cursor-pointer\",\n                  children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/2 flex flex-col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"self-end\",\n                children: auth.isAuthenticated && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"underline text-md font-medium cursor-pointer mr-5\",\n                  onClick: () => saveUpdatesToManifest(auth),\n                  children: t('SAVE')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n              pageStart: 0,\n              loadMore: handleLoadMore,\n              hasMore: imageList.length > renderToIdx && !isLoadingMore,\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container mx-auto flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 45\n                }, this)\n              }, \"circular\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 41\n              }, this),\n              useWindow: true,\n              children: mapIndex((item, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [i === 0 && /*#__PURE__*/_jsxDEV(CardDropZone, {\n                  i: -1,\n                  handleDrop: rearrangeImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  imageListLength: imageListLength,\n                  data: item,\n                  i: i\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(CardDropZone, {\n                  i: i,\n                  handleDrop: rearrangeImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 49\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 45\n              }, this), imageList.slice(0, renderToIdx))\n            }, 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    manifest: state.manifest\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/App.tsx"],"names":["React","AppBar","createMuiTheme","ThemeProvider","Card","DndProvider","FilterList","Backend","postUpdate","useTranslation","CircularProgress","useAuth0","addIndex","assoc","curry","dissoc","inc","insert","lensPath","map","over","propEq","reduce","reject","set","view","SettingsIcon","Dialog","InfiniteScroll","CardDropZone","getOrInitManifest","VolumeSearch","UpdateManifestError","setManifest","connect","mapIndex","theme","palette","primary","main","imageListLens","App","props","manifest","settingsDialogOpen","setSettingsDialog","useState","imageList","isFetching","setIsFetching","fetchErr","setFetchErr","renderToIdx","setRenderToIdx","isLoadingMore","setIsLoadingMore","postErr","setPostErr","dispatch","useEffect","search","window","location","params","URLSearchParams","volume","get","getData","uiLanguage","err","message","saveUpdatesToManifest","auth","removeCollapsed","formattedManifest","error","response","data","request","updateImageList","updatedImageList","handleLoadMore","setTimeout","sectionInUseCount","sectionId","acc","val","handleSettingsUpdate","lens","value","updatedManifest","rearrangeImage","imageId","idx","image","images","id","valToRemove","push","foldCheckedImages","reviewed","t","imageListLength","length","isDefault","forVolume","paddingTop","appData","isAuthenticated","item","i","slice","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../buda/src/index.css'\nimport AppBar from './components/AppBar'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Card from './components/Card'\nimport { DndProvider } from 'react-dnd'\nimport FilterList from './components/FilterList'\nimport Backend from 'react-dnd-html5-backend'\nimport postUpdate from './api/postUpdate'\nimport { useTranslation } from 'react-i18next'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { useAuth0 } from '../buda/src/react-auth0-spa'\nimport {\n    addIndex,\n    assoc,\n    curry,\n    dissoc,\n    inc,\n    insert,\n    lensPath,\n    map,\n    over,\n    propEq,\n    reduce,\n    reject,\n    set,\n    view,\n} from 'ramda'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Dialog from './components/Dialog'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport CardDropZone from './components/CardDropZone'\nimport { getOrInitManifest } from './api/getManifest'\nimport VolumeSearch from './components/VolumeSearch'\nimport UpdateManifestError from './components/UpdateManifestError'\nimport { Buda } from '../buda/types'\nimport { setManifest } from './redux/actions/manifest'\nimport { connect } from 'react-redux'\n\nconst mapIndex = addIndex(map)\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#212121',\n        },\n    },\n})\n\nconst imageListLens = lensPath(['view', 'view1', 'imagelist'])\n\nfunction App(props: any) {\n    const { manifest } = props\n\n    const [settingsDialogOpen, setSettingsDialog] = React.useState(false)\n    const imageList = (view(imageListLens, manifest) as Buda.Image[]) || []\n    const [isFetching, setIsFetching] = React.useState(false)\n    const [fetchErr, setFetchErr] = React.useState(null)\n    const [renderToIdx, setRenderToIdx] = React.useState(9)\n    const [isLoadingMore, setIsLoadingMore] = React.useState(false)\n    const [postErr, setPostErr] = React.useState(null)\n\n    const { dispatch } = props\n    React.useEffect(() => {\n        const search = window.location.search\n        const params = new URLSearchParams(search)\n        const volume = params.get('volume')\n        setFetchErr(null)\n        if (!volume) {\n            setIsFetching(false)\n        } else {\n            const getData = async () => {\n                setIsFetching(true)\n                try {\n                    const { manifest } = await getOrInitManifest(volume, {\n                        uiLanguage: 'en',\n                    })\n                    setIsFetching(false)\n                    dispatch(setManifest(manifest))\n                } catch (err) {\n                    setIsFetching(false)\n                    setFetchErr(err.message)\n                }\n            }\n            getData()\n        }\n    }, [dispatch])\n\n    const saveUpdatesToManifest = async (auth: any) => {\n        try {\n            const removeCollapsed = map(dissoc('collapsed'))\n            const formattedManifest = over(\n                imageListLens,\n                removeCollapsed,\n                manifest\n            )\n            await postUpdate(formattedManifest, auth)\n        } catch (error) {\n            if (error.response) {\n                setPostErr(error.response.data)\n            } else if (error.request) {\n                setPostErr(error.request)\n            } else {\n                setPostErr(error.message)\n            }\n        }\n    }\n    const updateImageList = (updatedImageList: unknown[]) => {\n        props.dispatch(\n            setManifest(set(imageListLens, updatedImageList, manifest))\n        )\n    }\n    const handleLoadMore = () => {\n        setRenderToIdx(renderToIdx + 10)\n        // setting this isfetching stops the infinite scroll from getting caught in a loop\n        setIsLoadingMore(true)\n        setTimeout(() => {\n            setIsLoadingMore(false)\n        }, 3000)\n    }\n    const sectionInUseCount = (sectionId: string) => {\n        return reduce(\n            (acc: number, val: Buda.Image) => {\n                return val.sectionId === sectionId ? ++acc : acc\n            },\n            0,\n            imageList\n        )\n    }\n    const handleSettingsUpdate = curry((lens, value) => {\n        const updatedManifest = set(lens, value, manifest)\n        props.dispatch(setManifest(updatedManifest))\n    })\n\n    const rearrangeImage = (imageId: string, idx: number) => {\n        const { image, images } = reduce(\n            (acc, val) => {\n                if (val.id === imageId) {\n                    const valToRemove = assoc('remove', true, val)\n                    acc.image = val\n                    acc.images.push(valToRemove)\n                    return acc\n                }\n                acc.images.push(val)\n                return acc\n            },\n            {\n                image: null,\n                images: [],\n            },\n            imageList\n        )\n        const updatedImageList = reject(\n            propEq('remove', true),\n            insert(inc(idx), image, images)\n        )\n        updateImageList(updatedImageList)\n    }\n\n    const foldCheckedImages = () => {\n        const updatedImageList = map(\n            image => (image.reviewed ? assoc('collapsed', true, image) : image),\n            imageList\n        )\n        updateImageList(updatedImageList)\n    }\n\n    const { t } = useTranslation()\n    const auth = useAuth0()\n\n    const imageListLength = imageList.length\n\n    return (\n        <ThemeProvider theme={theme}>\n            <DndProvider backend={Backend}>\n                <AppBar\n                    manifest={manifest}\n                    handleSettingsUpdate={handleSettingsUpdate}\n                >\n                    {!manifest.isDefault && (\n                        <FilterList\n                            handleSettingsUpdate={handleSettingsUpdate}\n                            manifest={manifest}\n                            foldCheckedImages={foldCheckedImages}\n                        />\n                    )}\n                </AppBar>\n                <UpdateManifestError\n                    postErr={postErr}\n                    setPostErr={setPostErr}\n                />\n                {manifest.isDefault ? (\n                    <VolumeSearch\n                        isFetching={isFetching}\n                        fetchErr={fetchErr}\n                        {...(manifest && manifest['imggroup']\n                            ? { forVolume: manifest['imggroup'] }\n                            : {})}\n                    />\n                ) : (\n                    <div className=\"App\" style={{ paddingTop: 125 }}>\n                        <div>\n                            <Dialog\n                                appData={manifest.appData}\n                                sectionInUseCount={sectionInUseCount}\n                                open={settingsDialogOpen}\n                                handleClose={() => setSettingsDialog(false)}\n                                manifest={manifest}\n                                handleSettingsUpdate={handleSettingsUpdate}\n                            />\n                            <div className=\"container mx-auto flex flex-row py-6\">\n                                <div className=\"w-1/2 flex flex-col\">\n                                    <span className=\"text-gray-600 text-sm\">\n                                        {t('Volume')}\n                                    </span>\n                                    <span className=\"text-sm font-bold text-xl mb-3\">\n                                        {manifest['imggroup']}\n                                        <span\n                                            onClick={() =>\n                                                setSettingsDialog(true)\n                                            }\n                                            className=\"underline text-md font-medium cursor-pointer\"\n                                        >\n                                            <SettingsIcon />\n                                        </span>\n                                    </span>\n                                    {/*<span className=\"underline text-blue-600 cursor-pointer\">*/}\n                                    {/*    {t('Preview')}*/}\n                                    {/*</span>*/}\n                                </div>\n                                <div className=\"w-1/2 flex flex-col\">\n                                    <div className=\"self-end\">\n                                        {auth.isAuthenticated && (\n                                            <span\n                                                className=\"underline text-md font-medium cursor-pointer mr-5\"\n                                                onClick={() =>\n                                                    saveUpdatesToManifest(auth)\n                                                }\n                                            >\n                                                {t('SAVE')}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"container mx-auto\">\n                                <InfiniteScroll\n                                    pageStart={0}\n                                    key={0}\n                                    loadMore={handleLoadMore}\n                                    hasMore={\n                                        imageList.length > renderToIdx &&\n                                        !isLoadingMore\n                                    }\n                                    loader={\n                                        <div\n                                            key=\"circular\"\n                                            className=\"container mx-auto flex items-center justify-center\"\n                                        >\n                                            <CircularProgress />\n                                        </div>\n                                    }\n                                    useWindow={true}\n                                >\n                                    {mapIndex(\n                                        (item: Buda.Image, i: number) => (\n                                            <React.Fragment key={i}>\n                                                {i === 0 && (\n                                                    <CardDropZone\n                                                        i={-1}\n                                                        handleDrop={\n                                                            rearrangeImage\n                                                        }\n                                                    />\n                                                )}\n                                                <Card\n                                                    imageListLength={\n                                                        imageListLength\n                                                    }\n                                                    data={item}\n                                                    key={item.id}\n                                                    i={i}\n                                                />\n                                                <CardDropZone\n                                                    i={i}\n                                                    handleDrop={rearrangeImage}\n                                                />\n                                            </React.Fragment>\n                                        ),\n                                        imageList.slice(0, renderToIdx)\n                                    )}\n                                </InfiniteScroll>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </DndProvider>\n        </ThemeProvider>\n    )\n}\n\nconst mapStateToProps = function(state: any) {\n    return {\n        manifest: state.manifest,\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}