{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/Card.tsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { red } from '@material-ui/core/colors';\nimport TextField from '@material-ui/core/TextField';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Checkbox } from '@material-ui/core';\nimport Edit from '@material-ui/icons/Edit';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityOnIcon from '@material-ui/icons/Visibility';\nimport EditCard from './EditCard';\nimport PreviewImage from './PreviewImage';\nimport axios from 'axios';\nimport BeenhereIcon from '@material-ui/icons/Beenhere';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport { useDrag } from 'react-dnd';\nimport { useTranslation } from 'react-i18next';\nimport Tags from './Tags';\nimport TypeSelect from './TypeSelect';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { Formik } from 'formik';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { pathOr } from 'ramda';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LanguageOptions from './LanguageOptions';\nimport { connect } from 'react-redux';\nimport { handlePaginationPredication, hideCardInManifest, insertMissing, markPreviousAsReviewed, toggleCollapseImage, toggleReview, updateImageSection, updateImageValue, updateUncheckedItems } from '../../buda/src/redux/actions/manifest';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: '100%'\n  },\n  cardHeader: {\n    textAlign: 'left'\n  },\n  media: {\n    maxWidth: '90%',\n    width: 'auto',\n    height: 'auto'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  marginIndicationTextField: {\n    padding: 0\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction ImageCard(props) {\n  const classes = useStyles();\n  const [editDialogOpen, setEditDialogOpen] = React.useState(false);\n  const [iiif, setiiif] = React.useState(null);\n  const {\n    data: image,\n    sectionInputs\n  } = props;\n  const [, dragRef] = useDrag({\n    item: {\n      type: 'CARD',\n      imageId: image.id\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.3 : 1\n    })\n  });\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await axios.get(`https://iiif.bdrc.io/${props.volumeId}::${image.filename}/info.json`);\n        const iiif = data.data;\n        setiiif(iiif);\n        return () => {};\n      } catch (err) {\n        console.log('iiifErr', err);\n      }\n    };\n\n    if (props.volumeId && image.filename) {\n      getData();\n    }\n  }, [image.filename, props.volumeId]);\n\n  const Header = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-2 justify-between\",\n      style: {\n        borderBottom: '1px solid rgb(235, 235, 235)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(DragHandleIcon, {\n          className: \"mr-2\",\n          style: {\n            cursor: 'move'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `font-bold ${image.hide && 'text-red-600'} flex align-center`,\n          children: [image.hide && /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            className: \"mr-2\",\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), image.filename || image.type, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 text-sm ml-4\",\n            children: `(${props.i + 1} of ${props.imageListLength})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"self-end flex\",\n        children: [image.note && image.note.length > 0 && /*#__PURE__*/_jsxDEV(NoteIcon, {\n          className: \"mr-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cursor-pointer\",\n          onClick: () => props.dispatch(toggleCollapseImage(props.i)),\n          children: image.collapsed ? /*#__PURE__*/_jsxDEV(VisibilityOnIcon, {\n            className: \"mr-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n            className: \"mr-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Edit, {\n          onClick: () => setEditDialogOpen(true),\n          className: \"mr-4 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SimpleMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  };\n\n  function SimpleMenu() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const {\n      t\n    } = useTranslation();\n\n    const handleClick = event => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(MoreVertIcon, {\n        \"aria-controls\": \"simple-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: handleClick,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"simple-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => props.dispatch(insertMissing(props.i, 'before')),\n          children: [/*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), t('Insert One Above')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => props.dispatch(insertMissing(props.i, 'after')),\n          children: [/*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), t('Insert One Below')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), !image.hide && /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => {\n            props.dispatch(hideCardInManifest(props.i, true));\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), t('Hide in Manifest')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), image.hide && /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => {\n            props.dispatch(hideCardInManifest(props.i, false));\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), t('Unhide in Manifest')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), image.pagination && /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => {\n            props.dispatch(updateUncheckedItems(image, props.i));\n          },\n          children: [/*#__PURE__*/_jsxDEV(BeenhereIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), t('Update following unchecked items')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), image.pagination && /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => {\n            props.dispatch(handlePaginationPredication(props.data));\n          },\n          children: [/*#__PURE__*/_jsxDEV(ReorderIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), t('Reorder this image according to indicated pagination')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => props.dispatch(markPreviousAsReviewed(props.i)),\n          children: [/*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), t('Mark all images down to this one as checked')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n\n  const {\n    t\n  } = useTranslation();\n  const hideImage = image.hide;\n  return hideImage ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow-sm hover:shadow-md w-full border-2 rounded border-gray-200 bg-white\",\n    ref: dragRef,\n    children: [/*#__PURE__*/_jsxDEV(EditCard, {\n      open: editDialogOpen,\n      setEditDialogOpen: setEditDialogOpen,\n      uiLanguage: props.uiLanguage,\n      data: image,\n      idx: props.i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      className: classes.cardHeader,\n      component: Header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), !image.collapsed && /*#__PURE__*/_jsxDEV(CardContent, {\n      className: \"flex\",\n      style: {\n        padding: 0\n      },\n      children: [iiif ? /*#__PURE__*/_jsxDEV(PreviewImage, {\n        i: props.i,\n        iiif: iiif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-r border-gray-300 mr-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300,\n            height: 192,\n            position: 'relative'\n          },\n          className: \"items-center flex justify-centermr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex flex-row  w-1/3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                marginIndication: pathOr('', ['indication', '@value'], image),\n                language: props.manifestLanguage\n              },\n              onSubmit: ({\n                marginIndication,\n                language\n              }) => {\n                props.dispatch(updateImageValue(props.i, 'indication', {\n                  '@value': marginIndication,\n                  '@language': language\n                }));\n              },\n              enableReinitialize: true,\n              children: ({\n                values,\n                handleChange,\n                handleSubmit\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: ' ',\n                  type: \"text\",\n                  value: values.marginIndication,\n                  onChange: handleChange,\n                  onBlur: () => {\n                    setTimeout(handleSubmit, 500);\n                  },\n                  inputProps: {\n                    name: 'marginIndication'\n                  },\n                  helperText: t('Margin Indication')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    shrink: true,\n                    children: \"''\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    native: true,\n                    value: values.language,\n                    onChange: handleChange,\n                    onBlur: () => {\n                      setTimeout(handleSubmit, 500);\n                    },\n                    inputProps: {\n                      id: 'language'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(LanguageOptions, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: !!image.reviewed,\n              onChange: () => {\n                props.dispatch(toggleReview(props.i));\n              },\n              value: \"reviewed\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col content-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                marginTop: '.5rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [sectionInputs.length > 0 && /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: pathOr('none', ['pagination', props.pagination[0].id, 'section'], image),\n                  onChange: e => {\n                    props.dispatch(updateImageSection(props.i, 'section', e.target.value));\n                  },\n                  className: \"mr-2\",\n                  style: {\n                    width: 155\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 'none',\n                    children: t('Choose Section')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 49\n                  }, this), \")\", sectionInputs.map((section, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: section.id,\n                      children: section.name['@value']\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 61\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                  initialValues: {\n                    pagination: pathOr('', ['pagination', props.pagination[0].id, 'value'], image)\n                  },\n                  onSubmit: ({\n                    pagination\n                  }) => {\n                    props.dispatch(updateImageSection(props.i, 'value', pagination));\n                  },\n                  enableReinitialize: true,\n                  children: ({\n                    values,\n                    handleChange,\n                    handleSubmit\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    helperText: t('Pagination'),\n                    value: values.pagination,\n                    onChange: handleChange,\n                    onBlur: () => {\n                      setTimeout(handleSubmit, 500);\n                    },\n                    inputProps: {\n                      name: 'pagination'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tags, {\n          idx: props.i,\n          id: image.id,\n          tags: image.tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TypeSelect, {\n          tags: image.tags,\n          id: image.id,\n          i: props.i,\n          duplicateOf: image.duplicateOf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n}\n\nImageCard.whyDidYouRender = true;\nconst emptyArr = [];\n\nconst mapStateToProps = function (state) {\n  const {\n    manifest\n  } = state;\n  return {\n    volumeId: manifest['imggroup'],\n    manifestLanguage: manifest.appData['bvmt']['default-vol-string-lang'],\n    uiLanguage: manifest.appData['bvmt']['default-ui-string-lang'],\n    pagination: manifest.pagination,\n    sectionInputs: manifest.sections || emptyArr\n  };\n}; // @ts-ignore\n\n\nexport default connect(mapStateToProps)(ImageCard);","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/Card.tsx"],"names":["React","makeStyles","CardHeader","CardContent","red","TextField","MoreVertIcon","DragHandleIcon","Select","FormControl","Checkbox","Edit","Menu","MenuItem","ArrowUpwardIcon","ArrowDownwardIcon","VisibilityOffIcon","VisibilityOnIcon","EditCard","PreviewImage","axios","BeenhereIcon","CheckBoxIcon","ReorderIcon","useDrag","useTranslation","Tags","TypeSelect","NoteIcon","Formik","DeleteIcon","pathOr","InputLabel","LanguageOptions","connect","handlePaginationPredication","hideCardInManifest","insertMissing","markPreviousAsReviewed","toggleCollapseImage","toggleReview","updateImageSection","updateImageValue","updateUncheckedItems","useStyles","theme","card","width","cardHeader","textAlign","media","maxWidth","height","formControl","margin","spacing","minWidth","marginIndicationTextField","padding","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","ImageCard","props","classes","editDialogOpen","setEditDialogOpen","useState","iiif","setiiif","data","image","sectionInputs","dragRef","item","type","imageId","id","collect","monitor","opacity","isDragging","useEffect","getData","get","volumeId","filename","err","console","log","Header","borderBottom","cursor","hide","color","i","imageListLength","note","length","dispatch","collapsed","SimpleMenu","anchorEl","setAnchorEl","t","handleClick","event","currentTarget","handleClose","Boolean","pagination","hideImage","uiLanguage","position","marginIndication","language","manifestLanguage","values","handleChange","handleSubmit","setTimeout","name","reviewed","marginTop","e","target","value","map","section","tags","duplicateOf","whyDidYouRender","emptyArr","mapStateToProps","state","manifest","appData","sections"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport { red } from '@material-ui/core/colors'\nimport TextField from '@material-ui/core/TextField'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport DragHandleIcon from '@material-ui/icons/DragHandle'\nimport Select from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport { Checkbox } from '@material-ui/core'\nimport Edit from '@material-ui/icons/Edit'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\nimport VisibilityOnIcon from '@material-ui/icons/Visibility'\nimport EditCard from './EditCard'\nimport PreviewImage from './PreviewImage'\nimport axios from 'axios'\nimport BeenhereIcon from '@material-ui/icons/Beenhere'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\nimport ReorderIcon from '@material-ui/icons/Reorder'\nimport { useDrag } from 'react-dnd'\nimport { useTranslation } from 'react-i18next'\nimport Tags from './Tags'\nimport TypeSelect from './TypeSelect'\nimport NoteIcon from '@material-ui/icons/Note'\nimport { Formik } from 'formik'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { pathOr } from 'ramda'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport LanguageOptions from './LanguageOptions'\nimport { connect } from 'react-redux'\nimport {\n    handlePaginationPredication,\n    hideCardInManifest,\n    insertMissing,\n    markPreviousAsReviewed,\n    toggleCollapseImage,\n    toggleReview,\n    updateImageSection,\n    updateImageValue,\n    updateUncheckedItems,\n} from '../../buda/src/redux/actions/manifest'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        width: '100%',\n    },\n    cardHeader: {\n        textAlign: 'left',\n    },\n    media: {\n        maxWidth: '90%',\n        width: 'auto',\n        height: 'auto',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    marginIndicationTextField: {\n        padding: 0,\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}))\n\nfunction ImageCard(props: {\n    i: number\n    imageListLength: any\n    sectionInputs: any\n    data: any\n    volumeId: string\n    uiLanguage: any\n    manifestLanguage: any\n    pagination: any\n    dispatch: any\n}) {\n    const classes = useStyles()\n    const [editDialogOpen, setEditDialogOpen] = React.useState(false)\n    const [iiif, setiiif] = React.useState(null)\n    const { data: image, sectionInputs } = props\n\n    const [, dragRef] = useDrag({\n        item: { type: 'CARD', imageId: image.id },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.3 : 1,\n        }),\n    })\n\n    React.useEffect(() => {\n        const getData = async () => {\n            try {\n                const data = await axios.get(\n                    `https://iiif.bdrc.io/${props.volumeId}::${image.filename}/info.json`,\n                )\n                const iiif = data.data\n                setiiif(iiif)\n                return () => {\n                }\n            } catch (err) {\n                console.log('iiifErr', err)\n            }\n        }\n        if (props.volumeId && image.filename) {\n            getData()\n        }\n    }, [image.filename, props.volumeId])\n\n    const Header = () => {\n        return (\n            <div\n                className=\"flex p-2 justify-between\"\n                style={{ borderBottom: '1px solid rgb(235, 235, 235)' }}\n            >\n                <div className=\"flex\">\n                    <DragHandleIcon\n                        className=\"mr-2\"\n                        style={{ cursor: 'move' }}\n                    />\n                    <h3\n                        className={`font-bold ${image.hide &&\n                        'text-red-600'} flex align-center`}\n                    >\n                        {image.hide && (\n                            <DeleteIcon\n                                className=\"mr-2\"\n                                style={{ color: 'red' }}\n                            />\n                        )}\n                        {image.filename || image.type}{' '}\n                        <span className=\"text-gray-500 text-sm ml-4\">{`(${props.i +\n                        1} of ${props.imageListLength})`}</span>\n                    </h3>\n                </div>\n                <div className=\"self-end flex\">\n                    {image.note && image.note.length > 0 && (\n                        <NoteIcon className=\"mr-4\"/>\n                    )}\n                    <span\n                        className=\"cursor-pointer\"\n                        onClick={() =>\n                            props.dispatch(toggleCollapseImage(props.i))\n                        }\n                    >\n                        {image.collapsed ? (\n                            <VisibilityOnIcon className=\"mr-4\"/>\n                        ) : (\n                            <VisibilityOffIcon className=\"mr-4\"/>\n                        )}\n                    </span>\n\n                    <Edit\n                        onClick={() => setEditDialogOpen(true)}\n                        className=\"mr-4 cursor-pointer\"\n                    />\n\n                    <SimpleMenu/>\n                </div>\n            </div>\n        )\n    }\n\n    function SimpleMenu() {\n        const [anchorEl, setAnchorEl] = React.useState(null)\n\n        const { t } = useTranslation()\n\n        const handleClick = (event: { currentTarget: any }) => {\n            setAnchorEl(event.currentTarget)\n        }\n\n        const handleClose = () => {\n            setAnchorEl(null)\n        }\n\n        return (\n            <div className=\"flex inline-block\">\n                <MoreVertIcon\n                    aria-controls=\"simple-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={handleClick}\n                    style={{ cursor: 'pointer' }}\n                />\n\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem\n                        onClick={() =>\n                            props.dispatch(insertMissing(props.i, 'before'))\n                        }\n                    >\n                        <ArrowUpwardIcon className=\"mr-2\"/>\n                        {t('Insert One Above')}\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() =>\n                            props.dispatch(insertMissing(props.i, 'after'))\n                        }\n                    >\n                        <ArrowDownwardIcon className=\"mr-2\"/>\n                        {t('Insert One Below')}\n                    </MenuItem>\n\n                    {!image.hide && (\n                        <MenuItem\n                            onClick={() => {\n                                props.dispatch(\n                                    hideCardInManifest(props.i, true),\n                                )\n                            }}\n                        >\n                            <DeleteIcon className=\"mr-2\"/>\n                            {t('Hide in Manifest')}\n                        </MenuItem>\n                    )}\n                    {image.hide && (\n                        <MenuItem\n                            onClick={() => {\n                                props.dispatch(\n                                    hideCardInManifest(props.i, false),\n                                )\n                            }}\n                        >\n                            <DeleteIcon className=\"mr-2\"/>\n                            {t('Unhide in Manifest')}\n                        </MenuItem>\n                    )}\n                    {image.pagination && (\n                        <MenuItem\n                            onClick={() => {\n                                props.dispatch(\n                                    updateUncheckedItems(image, props.i),\n                                )\n                            }}\n                        >\n                            <BeenhereIcon className=\"mr-2\"/>\n                            {t('Update following unchecked items')}\n                        </MenuItem>\n                    )}\n                    {image.pagination && (\n                        <MenuItem\n                            onClick={() => {\n                                props.dispatch(\n                                    handlePaginationPredication(props.data),\n                                )\n                            }}\n                        >\n                            <ReorderIcon className=\"mr-2\"/>\n                            {t(\n                                'Reorder this image according to indicated pagination',\n                            )}\n                        </MenuItem>\n                    )}\n                    <MenuItem\n                        onClick={() =>\n                            props.dispatch(markPreviousAsReviewed(props.i))\n                        }\n                    >\n                        <CheckBoxIcon className=\"mr-2\"/>\n                        {t('Mark all images down to this one as checked')}\n                    </MenuItem>\n                </Menu>\n            </div>\n        )\n    }\n\n    const { t } = useTranslation()\n    const hideImage = image.hide\n    return hideImage ? null : (\n        <div\n            className=\"shadow-sm hover:shadow-md w-full border-2 rounded border-gray-200 bg-white\"\n            ref={dragRef}\n        >\n            <EditCard\n                open={editDialogOpen}\n                setEditDialogOpen={setEditDialogOpen}\n                uiLanguage={props.uiLanguage}\n                data={image}\n                idx={props.i}\n            />\n            <CardHeader className={classes.cardHeader} component={Header}/>\n            {!image.collapsed && (\n                <CardContent className=\"flex\" style={{ padding: 0 }}>\n                    {iiif ? (\n                        <PreviewImage i={props.i as never} iiif={iiif as never}/>\n                    ) : (\n                        <div className=\"border-r border-gray-300 mr-2\">\n                            <div\n                                style={{\n                                    width: 300,\n                                    height: 192,\n                                    position: 'relative',\n                                }}\n                                className=\"items-center flex justify-centermr-2\"\n                            ></div>\n                        </div>\n                    )}\n\n                    <div className=\"flex flex-col w-1/2\">\n                        <div className=\"w-full flex flex-row  w-1/3\">\n                            <div className=\"mb-2\">\n                                <Formik\n                                    initialValues={{\n                                        marginIndication: pathOr(\n                                            '',\n                                            ['indication', '@value'],\n                                            image,\n                                        ),\n                                        language: props.manifestLanguage,\n                                    }}\n                                    onSubmit={({\n                                                   marginIndication,\n                                                   language,\n                                               }) => {\n                                        props.dispatch(\n                                            updateImageValue(\n                                                props.i,\n                                                'indication',\n                                                {\n                                                    '@value': marginIndication,\n                                                    '@language': language,\n                                                },\n                                            ),\n                                        )\n                                    }}\n                                    enableReinitialize\n                                >\n                                    {({\n                                          values,\n                                          handleChange,\n                                          handleSubmit,\n                                      }) => (\n                                        <>\n                                            <TextField\n                                                label={' '}\n                                                type=\"text\"\n                                                value={values.marginIndication}\n                                                onChange={handleChange}\n                                                onBlur={() => {\n                                                    setTimeout(\n                                                        handleSubmit,\n                                                        500,\n                                                    )\n                                                }}\n                                                inputProps={{\n                                                    name: 'marginIndication',\n                                                }}\n                                                helperText={t(\n                                                    'Margin Indication',\n                                                )}\n                                            />\n                                            <FormControl>\n                                                <InputLabel shrink>\n                                                    ''\n                                                </InputLabel>\n                                                <Select\n                                                    native\n                                                    value={values.language}\n                                                    onChange={handleChange}\n                                                    onBlur={() => {\n                                                        setTimeout(\n                                                            handleSubmit,\n                                                            500,\n                                                        )\n                                                    }}\n                                                    inputProps={{\n                                                        id: 'language',\n                                                    }}\n                                                >\n                                                    <LanguageOptions/>\n                                                </Select>\n                                            </FormControl>\n                                        </>\n                                    )}\n                                </Formik>\n\n                                <Checkbox\n                                    checked={!!image.reviewed}\n                                    onChange={() => {\n                                        props.dispatch(toggleReview(props.i))\n                                    }}\n                                    value=\"reviewed\"\n                                    color=\"primary\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"w-1/2 flex flex-col content-center mb-4\">\n                            <div className=\"w-full\">\n                                <FormControl style={{ marginTop: '.5rem' }}>\n                                    <div>\n                                        {sectionInputs.length > 0 && (\n                                            <Select\n                                                native\n                                                value={pathOr(\n                                                    'none',\n                                                    [\n                                                        'pagination',\n                                                        props.pagination[0].id,\n                                                        'section',\n                                                    ],\n                                                    image,\n                                                )}\n                                                onChange={e => {\n                                                    props.dispatch(\n                                                        updateImageSection(\n                                                            props.i,\n                                                            'section',\n                                                            e.target.value,\n                                                        ),\n                                                    )\n                                                }}\n                                                className=\"mr-2\"\n                                                style={{ width: 155 }}\n                                            >\n                                                <option value={'none'}>\n                                                    {t('Choose Section')}\n                                                </option>\n                                                )\n                                                {sectionInputs.map(\n                                                    (\n                                                        section: {\n                                                            id:\n                                                                | string\n                                                                | number\n                                                                | string[]\n                                                            name: {\n                                                                [x: string]: React.ReactNode\n                                                            }\n                                                        },\n                                                        i: React.Key,\n                                                    ) => {\n                                                        return (\n                                                            <option\n                                                                key={i}\n                                                                value={\n                                                                    section.id\n                                                                }\n                                                            >\n                                                                {\n                                                                    section\n                                                                        .name[\n                                                                        '@value'\n                                                                        ]\n                                                                }\n                                                            </option>\n                                                        )\n                                                    },\n                                                )}\n                                            </Select>\n                                        )}\n\n                                        <Formik\n                                            initialValues={{\n                                                pagination: pathOr(\n                                                    '',\n                                                    [\n                                                        'pagination',\n                                                        props.pagination[0].id,\n                                                        'value',\n                                                    ],\n                                                    image,\n                                                ),\n                                            }}\n                                            onSubmit={({ pagination }) => {\n                                                props.dispatch(\n                                                    updateImageSection(\n                                                        props.i,\n                                                        'value',\n                                                        pagination,\n                                                    ),\n                                                )\n                                            }}\n                                            enableReinitialize\n                                        >\n                                            {({\n                                                  values,\n                                                  handleChange,\n                                                  handleSubmit,\n                                              }) => (\n                                                <TextField\n                                                    helperText={t('Pagination')}\n                                                    value={values.pagination}\n                                                    onChange={handleChange}\n                                                    onBlur={() => {\n                                                        setTimeout(\n                                                            handleSubmit,\n                                                            500,\n                                                        )\n                                                    }}\n                                                    inputProps={{\n                                                        name: 'pagination',\n                                                    }}\n                                                />\n                                            )}\n                                        </Formik>\n                                    </div>\n                                </FormControl>\n                            </div>\n                        </div>\n\n                        <Tags idx={props.i} id={image.id} tags={image.tags}/>\n\n                        <TypeSelect\n                            tags={image.tags}\n                            id={image.id}\n                            i={props.i}\n                            duplicateOf={image.duplicateOf}\n                        />\n                    </div>\n                </CardContent>\n            )}\n        </div>\n    )\n}\n\nImageCard.whyDidYouRender = true\n\nconst emptyArr: any[] = []\n\nconst mapStateToProps = function(state: any) {\n    const { manifest } = state\n    return {\n        volumeId: manifest['imggroup'],\n        manifestLanguage: manifest.appData['bvmt']['default-vol-string-lang'],\n        uiLanguage: manifest.appData['bvmt']['default-ui-string-lang'],\n        pagination: manifest.pagination,\n        sectionInputs: manifest.sections || emptyArr,\n    }\n}\n\n// @ts-ignore\nexport default connect(mapStateToProps)(ImageCard)\n"]},"metadata":{},"sourceType":"module"}