{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/Tags.tsx\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport { assoc, includes } from 'ramda';\nimport { useTranslation } from 'react-i18next';\nimport tags from '..//tags.json';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { addImageTag } from '../redux/actions/manifest';\nconst tagMap = tags.reduce((acc, val) => {\n  return assoc(val.id, val, acc);\n}, {});\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 120,\n    maxWidth: 300\n  }\n}));\n\nconst Tags = props => {\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const [tagOptions, setTagOptions] = React.useState([]);\n  React.useEffect(() => {\n    setTagOptions(tags);\n  }, [props.tags]);\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        height: 500,\n        width: 500\n      }\n    }\n  };\n  const tagsSafe = props.tags || [];\n\n  const handleChange = e => {\n    const newTags = e.target.value;\n    props.dispatch(addImageTag(props.idx, newTags));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: props.tags || [],\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this),\n        renderValue: selected => {\n          return selected // @ts-ignore\n          .map(tag => tagMap[tag].label.en).join(', ');\n        },\n        MenuProps: MenuProps,\n        children: tagOptions.map(tag => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: tag.id,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: includes(tag.id, tagsSafe)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: tag.label.en\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, tag.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: t('Tags')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = function () {\n  return {};\n}; // @ts-ignore\n\n\nexport default connect(mapStateToProps)(Tags);","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/Tags.tsx"],"names":["React","Select","assoc","includes","useTranslation","tags","FormHelperText","makeStyles","Input","MenuItem","FormControl","ListItemText","Checkbox","connect","addImageTag","tagMap","reduce","acc","val","id","useStyles","formControl","minWidth","maxWidth","Tags","props","t","classes","tagOptions","setTagOptions","useState","useEffect","MenuProps","PaperProps","style","height","width","tagsSafe","handleChange","e","newTags","target","value","dispatch","idx","selected","map","tag","label","en","join","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport { assoc, includes } from 'ramda'\nimport { useTranslation } from 'react-i18next'\nimport tags from '..//tags.json'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Input from '@material-ui/core/Input'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { connect } from 'react-redux'\nimport { addImageTag } from '../redux/actions/manifest'\n\nconst tagMap = tags.reduce((acc, val) => {\n    return assoc(val.id, val, acc)\n}, {})\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n        maxWidth: 300,\n    },\n}))\nconst Tags = (props: { tags?: any; id?: any; dispatch: any; idx: number }) => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [tagOptions, setTagOptions] = React.useState([])\n    React.useEffect(() => {\n        setTagOptions(tags)\n    }, [props.tags])\n\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                height: 500,\n                width: 500,\n            },\n        },\n    }\n    const tagsSafe = props.tags || []\n    const handleChange = (e: { target: { value: any } }) => {\n        const newTags = e.target.value\n        props.dispatch(addImageTag(props.idx, newTags))\n    }\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <Select\n                    multiple\n                    value={props.tags || []}\n                    onChange={handleChange}\n                    input={<Input />}\n                    renderValue={(selected: any[]) => {\n                        return (\n                            selected\n                                // @ts-ignore\n                                .map(tag => tagMap[tag].label.en)\n                                .join(', ')\n                        )\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    {tagOptions.map(tag => (\n                        <MenuItem key={tag.id} value={tag.id}>\n                            <Checkbox\n                                checked={\n                                    (includes(\n                                        tag.id,\n                                        tagsSafe\n                                    ) as unknown) as boolean\n                                }\n                            />\n                            <ListItemText primary={tag.label.en} />\n                        </MenuItem>\n                    ))}\n                </Select>\n                <FormHelperText>{t('Tags')}</FormHelperText>\n            </FormControl>\n        </div>\n    )\n}\n\nconst mapStateToProps = function() {\n    return {}\n}\n\n// @ts-ignore\nexport default connect(mapStateToProps)(Tags)\n"]},"metadata":{},"sourceType":"module"}