{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aplchian/Documents/code/buda-next/components/Tags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport { assoc, includes } from 'ramda';\nimport { useTranslation } from 'react-i18next';\nimport tags from '..//tags.json';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { addImageTag } from '../redux/actions/manifest';\nvar tagMap = tags.reduce(function (acc, val) {\n  return assoc(val.id, val, acc);\n}, {});\nvar useStyles = makeStyles(function () {\n  return {\n    formControl: {\n      minWidth: 120,\n      maxWidth: 300\n    }\n  };\n});\n\nvar Tags = function Tags(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tagOptions = _React$useState2[0],\n      setTagOptions = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTagOptions(tags);\n  }, [props.tags]);\n  var MenuProps = {\n    PaperProps: {\n      style: {\n        height: 500,\n        width: 500\n      }\n    }\n  };\n  var tagsSafe = props.tags || [];\n\n  var handleChange = function handleChange(e) {\n    var newTags = e.target.value;\n    props.dispatch(addImageTag(props.idx, newTags));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: props.tags || [],\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, _this),\n        renderValue: function renderValue(selected) {\n          return selected // @ts-ignore\n          .map(function (tag) {\n            return tagMap[tag].label.en;\n          }).join(', ');\n        },\n        MenuProps: MenuProps,\n        children: tagOptions.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tag.id,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: includes(tag.id, tagsSafe)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: tag.label.en\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, _this)]\n          }, tag.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: t('Tags')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Tags, \"SxJ92i+7Wj6YjcBP09kZpbnQcms=\", false, function () {\n  return [useTranslation, useStyles];\n});\n\n_c = Tags;\n\nvar mapStateToProps = function mapStateToProps() {\n  return {};\n}; // @ts-ignore\n\n\nexport default connect(mapStateToProps)(Tags);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/components/Tags.tsx"],"names":["React","Select","assoc","includes","useTranslation","tags","FormHelperText","makeStyles","Input","MenuItem","FormControl","ListItemText","Checkbox","connect","addImageTag","tagMap","reduce","acc","val","id","useStyles","formControl","minWidth","maxWidth","Tags","props","t","classes","useState","tagOptions","setTagOptions","useEffect","MenuProps","PaperProps","style","height","width","tagsSafe","handleChange","e","newTags","target","value","dispatch","idx","selected","map","tag","label","en","join","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport { assoc, includes } from 'ramda'\nimport { useTranslation } from 'react-i18next'\nimport tags from '..//tags.json'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Input from '@material-ui/core/Input'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { connect } from 'react-redux'\nimport { addImageTag } from '../redux/actions/manifest'\n\nconst tagMap = tags.reduce((acc, val) => {\n    return assoc(val.id, val, acc)\n}, {})\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n        maxWidth: 300,\n    },\n}))\nconst Tags = (props: { tags?: any; id?: any; dispatch: any; idx: number }) => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [tagOptions, setTagOptions] = React.useState([])\n    React.useEffect(() => {\n        setTagOptions(tags)\n    }, [props.tags])\n\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                height: 500,\n                width: 500,\n            },\n        },\n    }\n    const tagsSafe = props.tags || []\n    const handleChange = (e: { target: { value: any } }) => {\n        const newTags = e.target.value\n        props.dispatch(addImageTag(props.idx, newTags))\n    }\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <Select\n                    multiple\n                    value={props.tags || []}\n                    onChange={handleChange}\n                    input={<Input />}\n                    renderValue={(selected: any[]) => {\n                        return (\n                            selected\n                                // @ts-ignore\n                                .map(tag => tagMap[tag].label.en)\n                                .join(', ')\n                        )\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    {tagOptions.map(tag => (\n                        <MenuItem key={tag.id} value={tag.id}>\n                            <Checkbox\n                                checked={\n                                    (includes(\n                                        tag.id,\n                                        tagsSafe\n                                    ) as unknown) as boolean\n                                }\n                            />\n                            <ListItemText primary={tag.label.en} />\n                        </MenuItem>\n                    ))}\n                </Select>\n                <FormHelperText>{t('Tags')}</FormHelperText>\n            </FormControl>\n        </div>\n    )\n}\n\nconst mapStateToProps = function() {\n    return {}\n}\n\n// @ts-ignore\nexport default connect(mapStateToProps)(Tags)\n"]},"metadata":{},"sourceType":"module"}