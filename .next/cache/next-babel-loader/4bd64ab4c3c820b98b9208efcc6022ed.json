{"ast":null,"code":"// @ts-nocheck\nimport { pagination_types } from './pagination-prediction';\nexport function getComparator(manifest) {\n  var paginations = manifest.pagination;\n\n  if (!paginations || paginations.length < 1) {\n    // error\n    return function (a, b) {\n      console.error('no pagination indication in the manifest, cannot compare anything');\n      return 0;\n    };\n  }\n\n  var default_pg_name = paginations[0].id; // TODO for Alex: this probably won't work as pagination_types is a variable of\n  // pagination-prediction.ts which is not exported, not sure how to make it work\n\n  var default_pg_type_info = pagination_types[paginations[0].type];\n  var sections_id_map = null;\n\n  if (manifest.section) {\n    for (var i = 0; i < manifest.sections.length; i++) {\n      sections_id_map[manifest.sections[i].id] = i;\n    }\n  } // a and b are pagination objects of imageinfo\n\n\n  return function (a, b) {\n    if (!a || !b) {\n      console.error('calling pagination comparator with null argument');\n      return 0;\n    }\n\n    if (a[default_pg_name] && b[default_pg_name]) {\n      var a_dpg = a[default_pg_name];\n      var b_dpg = b[default_pg_name];\n\n      if (sections_id_map && a_dpg.section && b_dpg.section && a_dpg.section !== b_dpg.section) {\n        return sections_id_map[a_dpg.section] - sections_id_map[b_dpg.section];\n      } // we ignore the case where one has a section and not the other as it's invalid\n\n\n      return default_pg_type_info.compare(a_dpg.value, b_dpg.value);\n    } // TODO, for later as it won't impact the current too: handling non-default pagination\n\n  };\n}","map":{"version":3,"sources":["/Users/aplchian/Documents/code/buda-next/utils/pagination-comparators.ts"],"names":["pagination_types","getComparator","manifest","paginations","pagination","length","a","b","console","error","default_pg_name","id","default_pg_type_info","type","sections_id_map","section","i","sections","a_dpg","b_dpg","compare","value"],"mappings":"AAAA;AACA,SAASA,gBAAT,QAAiC,yBAAjC;AAEA,OAAO,SAASC,aAAT,CAAuBC,QAAvB,EAIJ;AACC,MAAIC,WAAW,GAAGD,QAAQ,CAACE,UAA3B;;AACA,MAAI,CAACD,WAAD,IAAgBA,WAAW,CAACE,MAAZ,GAAqB,CAAzC,EAA4C;AACxC;AACA,WAAO,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAClBC,MAAAA,OAAO,CAACC,KAAR,CACI,mEADJ;AAGA,aAAO,CAAP;AACH,KALD;AAMH;;AACD,MAAIC,eAAe,GAAGP,WAAW,CAAC,CAAD,CAAX,CAAeQ,EAArC,CAXD,CAYC;AACA;;AACA,MAAIC,oBAAoB,GAAGZ,gBAAgB,CAACG,WAAW,CAAC,CAAD,CAAX,CAAeU,IAAhB,CAA3C;AACA,MAAIC,eAAe,GAAG,IAAtB;;AACA,MAAIZ,QAAQ,CAACa,OAAb,EAAsB;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,QAAQ,CAACe,QAAT,CAAkBZ,MAAtC,EAA8CW,CAAC,EAA/C,EAAmD;AAC/CF,MAAAA,eAAe,CAACZ,QAAQ,CAACe,QAAT,CAAkBD,CAAlB,EAAqBL,EAAtB,CAAf,GAA2CK,CAA3C;AACH;AACJ,GApBF,CAqBC;;;AACA,SAAO,UAASV,CAAT,EAAYC,CAAZ,EAAe;AAClB,QAAI,CAACD,CAAD,IAAM,CAACC,CAAX,EAAc;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kDAAd;AACA,aAAO,CAAP;AACH;;AACD,QAAIH,CAAC,CAACI,eAAD,CAAD,IAAsBH,CAAC,CAACG,eAAD,CAA3B,EAA8C;AAC1C,UAAIQ,KAAK,GAAGZ,CAAC,CAACI,eAAD,CAAb;AACA,UAAIS,KAAK,GAAGZ,CAAC,CAACG,eAAD,CAAb;;AACA,UACII,eAAe,IACfI,KAAK,CAACH,OADN,IAEAI,KAAK,CAACJ,OAFN,IAGAG,KAAK,CAACH,OAAN,KAAkBI,KAAK,CAACJ,OAJ5B,EAKE;AACE,eACID,eAAe,CAACI,KAAK,CAACH,OAAP,CAAf,GACAD,eAAe,CAACK,KAAK,CAACJ,OAAP,CAFnB;AAIH,OAbyC,CAc1C;;;AACA,aAAOH,oBAAoB,CAACQ,OAArB,CAA6BF,KAAK,CAACG,KAAnC,EAA0CF,KAAK,CAACE,KAAhD,CAAP;AACH,KArBiB,CAsBlB;;AACH,GAvBD;AAwBH","sourcesContent":["// @ts-nocheck\nimport { pagination_types } from './pagination-prediction'\n\nexport function getComparator(manifest: {\n    pagination: any\n    section: any\n    sections: string | any[]\n}) {\n    var paginations = manifest.pagination\n    if (!paginations || paginations.length < 1) {\n        // error\n        return function(a, b) {\n            console.error(\n                'no pagination indication in the manifest, cannot compare anything'\n            )\n            return 0\n        }\n    }\n    var default_pg_name = paginations[0].id\n    // TODO for Alex: this probably won't work as pagination_types is a variable of\n    // pagination-prediction.ts which is not exported, not sure how to make it work\n    var default_pg_type_info = pagination_types[paginations[0].type]\n    var sections_id_map = null\n    if (manifest.section) {\n        for (var i = 0; i < manifest.sections.length; i++) {\n            sections_id_map[manifest.sections[i].id] = i\n        }\n    }\n    // a and b are pagination objects of imageinfo\n    return function(a, b) {\n        if (!a || !b) {\n            console.error('calling pagination comparator with null argument')\n            return 0\n        }\n        if (a[default_pg_name] && b[default_pg_name]) {\n            var a_dpg = a[default_pg_name]\n            var b_dpg = b[default_pg_name]\n            if (\n                sections_id_map &&\n                a_dpg.section &&\n                b_dpg.section &&\n                a_dpg.section !== b_dpg.section\n            ) {\n                return (\n                    sections_id_map[a_dpg.section] -\n                    sections_id_map[b_dpg.section]\n                )\n            }\n            // we ignore the case where one has a section and not the other as it's invalid\n            return default_pg_type_info.compare(a_dpg.value, b_dpg.value)\n        }\n        // TODO, for later as it won't impact the current too: handling non-default pagination\n    }\n}\n"]},"metadata":{},"sourceType":"module"}